{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_ZivoeAddresses",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_boolMetaOrPlainAndRewards",
          "type": "bool[]"
        },
        {
          "internalType": "address",
          "name": "_curvePool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_CVX_Deposit_Address",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_rewardsAddresses",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_BASE_TOKEN_MP",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_MP_UNDERLYING_LP_POOL",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_numberOfTokensUnderlyingLPPool",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_numberOfTokensPP",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_convexPoolID",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_chainlinkPriceFeeds",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferredAndLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minReturn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "pools",
          "type": "bytes32[]"
        }
      ],
      "name": "SwapExecuted_2e95b6c8",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spentAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLeft",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetToSwap",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "srcToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "dstToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "srcReceiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dstReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minReturnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "flags",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "permit",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct ZivoeSwapper.SwapDescription",
          "name": "info",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "SwapExecuted_7c025200",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minReturn",
          "type": "uint256"
        }
      ],
      "name": "SwapExecuted_b0431182",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualMakingAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualTakingAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "info",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "makerAsset",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "takerAsset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "allowedSender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makingAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takingAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ZivoeSwapper.OrderRFQ",
          "name": "order",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "makingAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takingAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapExecuted_d0a3b665",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "returnAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minReturn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "pools",
          "type": "uint256[]"
        }
      ],
      "name": "SwapExecuted_e449022e",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CRV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CVX",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CVX_Deposit_Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CVX_Reward_Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GBL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MP_UNDERLYING_LP_POOL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MP_UNDERLYING_LP_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL_LP_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PP_TOKENS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPull",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPullERC1155",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPullERC721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPullMulti",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPullMultiERC721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPullMultiPartial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPullPartial",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPush",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPushERC1155",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPushERC721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPushMulti",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPushMultiERC721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "chainlinkPriceFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexPoolID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "extraRewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexBASE_TOKEN",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investTimeLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metaOrPlainPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextYieldDistribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfTokensUnderlyingLPPool",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "pullFromLocker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "pullFromLockerERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "pullFromLockerERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "name": "pullFromLockerMulti",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "pullFromLockerMultiERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "pullFromLockerMultiPartial",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pullFromLockerPartial",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pushToLocker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "pushToLockerERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "pushToLockerERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "pushToLockerMulti",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "pushToLockerMultiERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewardsAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router1INCH_V4",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toForwardCRV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toForwardCVX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "toForwardExtraRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "toForwardTokensBaseline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnershipAndLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yieldOwedToYDL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c0604052731111111254fb6c44bac0bed2854e76f90643097d6080523480156200002957600080fd5b5060405162002e6b38038062002e6b8339810160408190526200004c9162000de2565b620000573362000a78565b60058360ff1610620000c55760405162461bcd60e51b815260206004820152603b602482015260008051602062002e4b83398151915260448201527f206d6178203420746f6b656e7320696e20706c61696e20706f6f6c000000000060648201526084015b60405180910390fd5b60058751106200012d5760405162461bcd60e51b8152602060048201526034602482015260008051602062002e4b83398151915260448201527f206d617820342072657761726420746f6b656e730000000000000000000000006064820152608401620000bc565b60058460ff1610620001a35760405162461bcd60e51b8152602060048201526043602482015260008051602062002e4b83398151915260448201527f206d6178203420746f6b656e7320696e20756e6465726c79696e67204c5020706064820152621bdbdb60ea1b608482015260a401620000bc565b620001d18b600081518110620001bd57620001bd62000f2c565b602002602001015162000ac860201b60201c565b8a600181518110620001e757620001e762000f2c565b60209081029190910101516001600160a01b0390811660a052600a80546001600160a01b031916918a169182179055604051631526fe2760e01b815260048101849052631526fe279060240160c060405180830381865afa15801562000251573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000277919062000f42565b60600151600b80546001600160a01b0319166001600160a01b0390921691909117905589518a90600090620002b057620002b062000f2c565b6020026020010151600360006101000a81548160ff02191690831515021790555081600c8190555089600181518110620002ee57620002ee62000f2c565b60209081029190910101516003805461ff001916610100921515830217908190556012805460ff60a01b1916600160a01b60ff8981169190910291909117909155919004161515600103620003b95760005b87518160ff161015620003b757600d888260ff168151811062000367576200036762000f2c565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620003ae8162001006565b91505062000340565b505b60035460ff161515600103620007eb57601254620003e390600160a01b900460ff16600162001028565b60ff16815114620004635760405162461bcd60e51b815260206004820152604e602482015260008051602062002e4b83398151915260448201527f206e6f20636f727265637420616d6f756e74206f66207072696365206665656460648201526d1cc8199bdc881b595d185c1bdbdb60921b608482015260a401620000bc565b600e80546001600160a01b0319166001600160a01b038b811691909117909155604051631526fe2760e01b81526004810184905290891690631526fe279060240160c060405180830381865afa158015620004c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e8919062000f42565b51600f80546001600160a01b03199081166001600160a01b03938416179091556010805482168984161790556012805490911691871691909117905560005b81518160ff1610156200059e576015828260ff16815181106200054e576200054e62000f2c565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580620005958162001006565b91505062000527565b50600e5460405163c661065760e01b8152600060048201526001600160a01b0388811692169063c661065790602401602060405180830381865afa158015620005eb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200061191906200104a565b6001600160a01b031603620006c657600e5460405163c661065760e01b8152600160048201526001600160a01b039091169063c661065790602401602060405180830381865afa1580156200066a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200069091906200104a565b601180546001600160a01b0319166001600160a01b0392909216919091179055601380546001600160801b0319169055620007eb565b600e5460405163c661065760e01b8152600160048201526001600160a01b0388811692169063c661065790602401602060405180830381865afa15801562000712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200073891906200104a565b6001600160a01b031603620007eb57600e5460405163c661065760e01b8152600060048201526001600160a01b039091169063c661065790602401602060405180830381865afa15801562000791573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007b791906200104a565b601180546001600160a01b0319166001600160a01b0392909216919091179055601380546001600160801b03191660011790555b60035460ff16151560000362000a67578260ff168151146200089c5760405162461bcd60e51b8152602060048201526068602482015260008051602062002e4b83398151915260448201527f20706c61696e20706f6f6c3a206e756d626572206f662070726963652066656560648201527f64732073686f756c6420636f72726573706f6e6420746f206e756d626572206f6084820152676620746f6b656e7360c01b60a482015260c401620000bc565b600e80546001600160a01b0319166001600160a01b038b811691909117909155604051631526fe2760e01b81526004810184905290891690631526fe279060240160c060405180830381865afa158015620008fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000921919062000f42565b51600f80546001600160a01b0319166001600160a01b0390921691909117905560005b8360ff168160ff16101562000a6557600e5460405163c661065760e01b815260ff831660048201526014916001600160a01b03169063c661065790602401602060405180830381865afa158015620009a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c691906200104a565b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790558151601590839060ff841690811062000a155762000a1562000f2c565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558062000a5c8162001006565b91505062000944565b505b50505050505050505050506200106f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000ad262000bc8565b600054600160a01b900460ff161562000b3c5760405162461bcd60e51b815260206004820152602560248201527f5a69766f654f776e61626c654c6f636b65643a3a756e6c6f636b65642829206c6044820152641bd8dad95960da1b6064820152608401620000bc565b6001600160a01b03811662000bba5760405162461bcd60e51b815260206004820152603e60248201527f5a69766f654f776e61626c654c6f636b65643a3a7472616e736665724f776e6560448201527f72736869702829206e65774f776e6572203d3d206164647265737328302900006064820152608401620000bc565b62000bc58162000a78565b50565b6000546001600160a01b0316331462000c4a5760405162461bcd60e51b815260206004820152603760248201527f5a69766f654f776e61626c654c6f636b65643a3a5f636865636b4f776e65722060448201527f6f776e6572282920213d205f6d736753656e64657228290000000000000000006064820152608401620000bc565b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000c8d5762000c8d62000c4c565b604052919050565b60006001600160401b0382111562000cb15762000cb162000c4c565b5060051b60200190565b80516001600160a01b038116811462000cd357600080fd5b919050565b600082601f83011262000cea57600080fd5b8151602062000d0362000cfd8362000c95565b62000c62565b82815260059290921b8401810191818101908684111562000d2357600080fd5b8286015b8481101562000d495762000d3b8162000cbb565b835291830191830162000d27565b509695505050505050565b8051801515811462000cd357600080fd5b600082601f83011262000d7757600080fd5b8151602062000d8a62000cfd8362000c95565b82815260059290921b8401810191818101908684111562000daa57600080fd5b8286015b8481101562000d495762000dc28162000d54565b835291830191830162000dae565b805160ff8116811462000cd357600080fd5b60008060008060008060008060008060006101608c8e03121562000e0557600080fd5b8b516001600160401b0381111562000e1c57600080fd5b62000e2a8e828f0162000cd8565b60208e0151909c5090506001600160401b0381111562000e4957600080fd5b62000e578e828f0162000d65565b9a505062000e6860408d0162000cbb565b985062000e7860608d0162000cbb565b60808d01519098506001600160401b0381111562000e9557600080fd5b62000ea38e828f0162000cd8565b97505062000eb460a08d0162000cbb565b955062000ec460c08d0162000cbb565b945062000ed460e08d0162000dd0565b935062000ee56101008d0162000dd0565b6101208d01516101408e015191945092506001600160401b0381111562000f0b57600080fd5b62000f198e828f0162000cd8565b9150509295989b509295989b9093969950565b634e487b7160e01b600052603260045260246000fd5b600060c0828403121562000f5557600080fd5b60405160c081016001600160401b038111828210171562000f7a5762000f7a62000c4c565b60405262000f888362000cbb565b815262000f986020840162000cbb565b602082015262000fab6040840162000cbb565b604082015262000fbe6060840162000cbb565b606082015262000fd16080840162000cbb565b608082015262000fe460a0840162000d54565b60a08201529392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036200101f576200101f62000ff0565b60010192915050565b60ff818116838216019081111562001044576200104462000ff0565b92915050565b6000602082840312156200105d57600080fd5b620010688262000cbb565b9392505050565b60805160a051611db66200109560003960006104dc0152600061045c0152611db66000f3fe608060405234801561001057600080fd5b50600436106103a45760003560e01c8063945c9142116101e9578063d9821e3b1161010f578063eada4cd7116100ad578063f85fcb1a1161007c578063f85fcb1a1461077c578063f988dc3f14610785578063fd76f59d1461078e578063ff0459ba146107a157600080fd5b8063eada4cd71461072e578063f23a6e6114610741578063f2fde38b14610760578063f5a047851461077357600080fd5b8063dbbc65d9116100e9578063dbbc65d91461070f578063dd913bdb14610450578063e21c81d31461071c578063e7f446291461045057600080fd5b8063d9821e3b146106c3578063da456cbd146106d6578063da87d2cf146106fc57600080fd5b8063b3da6b0811610187578063c9c6a41411610156578063c9c6a41414610689578063cf10b7ab14610450578063cf3090121461069c578063d0991c84146106b057600080fd5b8063b3da6b081461063b578063b892bcc014610644578063bc197c8114610657578063be8d80611461067657600080fd5b8063ab2637af116101c3578063ab2637af14610616578063aeb3264b1461061f578063b0607cf814610450578063b2c500f01461062857600080fd5b8063945c9142146105e8578063a0c9455a14610603578063a4a3e79d146104fe57600080fd5b80633eda81ad116102ce578063607cd6491161026c5780637dbcdbc11161023b5780637dbcdbc1146105b157806384476591146105c45780638b648ee2146104505780638da5cb5b146105d757600080fd5b8063607cd6491461057b57806364c77735146104fe578063715018a61461058e578063759cb53b1461059657600080fd5b80634d65dd1c116102a85780634d65dd1c1461052f57806358289c7e146105425780635e860430146105555780635edb2ba41461056857600080fd5b80633eda81ad146104fe578063422b20181461050557806349a5e73b1461051857600080fd5b80631af1ca97116103465780632dd3d9ef116103155780632dd3d9ef146104c45780632f08d48b146104505780633c117244146104505780633ce8d432146104d757600080fd5b80631af1ca971461047e5780631d9389e91461049e578063210663e4146104b1578063215cccdd1461045057600080fd5b806315e987441161038257806315e987441461041257806316f0115b146104255780631852b3831461045057806319ce95f41461045757600080fd5b806301ffc9a7146103a957806312052176146103d1578063150b7a02146103e6575b600080fd5b6103bc6103b736600461159d565b6107b4565b60405190151581526020015b60405180910390f35b6103e46103df366004611632565b6107eb565b005b6103f96103f4366004611740565b61085d565b6040516001600160e01b031990911681526020016103c8565b6103e46104203660046117eb565b61086e565b600e54610438906001600160a01b031681565b6040516001600160a01b0390911681526020016103c8565b60006103bc565b6104387f000000000000000000000000000000000000000000000000000000000000000081565b60135461048b90600f0b81565b604051600f9190910b81526020016103c8565b6103e46104ac366004611632565b6109df565b601054610438906001600160a01b031681565b6104386104d2366004611884565b610a4a565b6104387f000000000000000000000000000000000000000000000000000000000000000081565b60016103bc565b6103e461051336600461189d565b610a74565b610521600c5481565b6040519081526020016103c8565b600a54610438906001600160a01b031681565b6103e4610550366004611947565b610ae3565b601254610438906001600160a01b031681565b601154610438906001600160a01b031681565b6103e4610589366004611962565b610bbe565b6103e4610cc5565b610438734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81565b6103e46105bf366004611947565b610d03565b6103e46105d23660046119a3565b610d64565b6000546001600160a01b0316610438565b61043873d533a949740bb3306d119cc777fa900ba034cd5281565b610438610611366004611884565b610dc7565b61052160045481565b61052160025481565b600f54610438906001600160a01b031681565b61052160055481565b6103e46106523660046117eb565b610dd7565b6103f9610665366004611a41565b63bc197c8160e01b95945050505050565b610521610684366004611884565b610f3f565b6103e4610697366004611aea565b610f60565b6000546103bc90600160a01b900460ff1681565b6104386106be366004611884565b610ff3565b6103e46106d13660046119a3565b611003565b6012546106ea90600160a01b900460ff1681565b60405160ff90911681526020016103c8565b61052161070a366004611884565b611031565b6003546103bc9060ff1681565b6003546103bc90610100900460ff1681565b600b54610438906001600160a01b031681565b6103f961074f366004611b49565b63f23a6e6160e01b95945050505050565b6103e461076e366004611947565b611041565b61052160065481565b61052160075481565b61052160015481565b6103e461079c36600461189d565b6110f8565b6103e46107af366004611aea565b611165565b60006001600160e01b03198216630271189760e51b14806107e557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6107f3611237565b60405162461bcd60e51b815260206004820152603460248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65724552433732604482015273312829202163616e50756c6c455243373231282960601b60648201526084015b60405180910390fd5b630a85bd0160e11b5b949350505050565b610876611237565b60405162461bcd60e51b815260206004820152603e60248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65724d756c746960448201527f4552433732312829202163616e50756c6c4d756c7469455243373231282900006064820152608401610854565b858110156109d6578686828181106108fe576108fe611c0a565b90506020020160208101906109139190611947565b6001600160a01b031663b88d4fde306109346000546001600160a01b031690565b88888681811061094657610946611c0a565b9050602002013587878781811061095f5761095f611c0a565b90506020028101906109719190611c20565b6040518663ffffffff1660e01b8152600401610991959493929190611bd6565b600060405180830381600087803b1580156109ab57600080fd5b505af11580156109bf573d6000803e3d6000fd5b5050505080806109ce90611c66565b9150506108e4565b50505050505050565b6109e7611237565b60405162461bcd60e51b815260206004820152603260248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b65724552433732312860448201527129202163616e50757368455243373231282960701b6064820152608401610854565b60158181548110610a5a57600080fd5b6000918252602090912001546001600160a01b0316905081565b610a7c611237565b60405162461bcd60e51b815260206004820152603660248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b6572455243313160448201527535352829202163616e50756c6c45524331313535282960501b6064820152608401610854565b610aeb611237565b600054600160a01b900460ff1615610b155760405162461bcd60e51b815260040161085490611c8d565b6001600160a01b038116610b9f5760405162461bcd60e51b815260206004820152604560248201527f5a69766f654f776e61626c654c6f636b65643a3a7472616e736665724f776e6560448201527f7273686970416e644c6f636b2829206e65774f776e6572203d3d206164647265606482015264737328302960d81b608482015260a401610854565b6000805460ff60a01b1916600160a01b179055610bbb816112b7565b50565b610bc6611237565b60005b81811015610cc057610cae610be66000546001600160a01b031690565b848484818110610bf857610bf8611c0a565b9050602002016020810190610c0d9190611947565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190611cd2565b858585818110610c8957610c89611c0a565b9050602002016020810190610c9e9190611947565b6001600160a01b03169190611307565b80610cb881611c66565b915050610bc9565b505050565b610ccd611237565b600054600160a01b900460ff1615610cf75760405162461bcd60e51b815260040161085490611c8d565b610d0160006112b7565b565b610d0b611237565b60405162461bcd60e51b815260206004820152602860248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65722829202163604482015267616e50756c6c282960c01b6064820152608401610854565b610d6c611237565b60405162461bcd60e51b815260206004820152602660248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b65722829202163616e60448201526550757368282960d01b6064820152608401610854565b5050565b600d8181548110610a5a57600080fd5b610ddf611237565b60405162461bcd60e51b815260206004820152603c60248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b65724d756c7469455260448201527f433732312829202163616e507573684d756c74694552433732312829000000006064820152608401610854565b858110156109d657868682818110610e6757610e67611c0a565b9050602002016020810190610e7c9190611947565b6001600160a01b031663b88d4fde610e9c6000546001600160a01b031690565b30888886818110610eaf57610eaf611c0a565b90506020020135878787818110610ec857610ec8611c0a565b9050602002810190610eda9190611c20565b6040518663ffffffff1660e01b8152600401610efa959493929190611bd6565b600060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b505050508080610f3790611c66565b915050610e4d565b60088181548110610f4f57600080fd5b600091825260209091200154905081565b610f68611237565b60005b83811015610fec57610fda610f886000546001600160a01b031690565b30858585818110610f9b57610f9b611c0a565b90506020020135888886818110610fb457610fb4611c0a565b9050602002016020810190610fc99190611947565b6001600160a01b031692919061136a565b80610fe481611c66565b915050610f6b565b5050505050565b60148181548110610a5a57600080fd5b61100b611237565b610dc36110206000546001600160a01b031690565b6001600160a01b0384169083611307565b60098181548110610f4f57600080fd5b611049611237565b600054600160a01b900460ff16156110735760405162461bcd60e51b815260040161085490611c8d565b6001600160a01b0381166110ef5760405162461bcd60e51b815260206004820152603e60248201527f5a69766f654f776e61626c654c6f636b65643a3a7472616e736665724f776e6560448201527f72736869702829206e65774f776e6572203d3d206164647265737328302900006064820152608401610854565b610bbb816112b7565b611100611237565b60405162461bcd60e51b815260206004820152603460248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b6572455243313135356044820152732829202163616e5075736845524331313535282960601b6064820152608401610854565b61116d611237565b6040805162461bcd60e51b81526020600482015260248101919091527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65724d756c746960448201527f5061727469616c2829202163616e50756c6c4d756c74695061727469616c28296064820152608401610854565b83811015610fec576112256111fa6000546001600160a01b031690565b84848481811061120c5761120c611c0a565b90506020020135878785818110610c8957610c89611c0a565b8061122f81611c66565b9150506111dd565b6000546001600160a01b03163314610d015760405162461bcd60e51b815260206004820152603760248201527f5a69766f654f776e61626c654c6f636b65643a3a5f636865636b4f776e65722060448201527f6f776e6572282920213d205f6d736753656e64657228290000000000000000006064820152608401610854565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038316602482015260448101829052610cc090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113a8565b6040516001600160a01b03808516602483015283166044820152606481018290526113a29085906323b872dd60e01b90608401611333565b50505050565b60006113fd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661147a9092919063ffffffff16565b805190915015610cc0578080602001905181019061141b9190611ceb565b610cc05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610854565b6060610866848460008585600080866001600160a01b031685876040516114a19190611d31565b60006040518083038185875af1925050503d80600081146114de576040519150601f19603f3d011682016040523d82523d6000602084013e6114e3565b606091505b50915091506114f4878383876114ff565b979650505050505050565b6060831561156e578251600003611567576001600160a01b0385163b6115675760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610854565b5081610866565b61086683838151156115835781518083602001fd5b8060405162461bcd60e51b81526004016108549190611d4d565b6000602082840312156115af57600080fd5b81356001600160e01b0319811681146115c757600080fd5b9392505050565b80356001600160a01b03811681146115e557600080fd5b919050565b60008083601f8401126115fc57600080fd5b5081356001600160401b0381111561161357600080fd5b60208301915083602082850101111561162b57600080fd5b9250929050565b6000806000806060858703121561164857600080fd5b611651856115ce565b93506020850135925060408501356001600160401b0381111561167357600080fd5b61167f878288016115ea565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116c9576116c961168b565b604052919050565b600082601f8301126116e257600080fd5b81356001600160401b038111156116fb576116fb61168b565b61170e601f8201601f19166020016116a1565b81815284602083860101111561172357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561175657600080fd5b61175f856115ce565b935061176d602086016115ce565b92506040850135915060608501356001600160401b0381111561178f57600080fd5b61179b878288016116d1565b91505092959194509250565b60008083601f8401126117b957600080fd5b5081356001600160401b038111156117d057600080fd5b6020830191508360208260051b850101111561162b57600080fd5b6000806000806000806060878903121561180457600080fd5b86356001600160401b038082111561181b57600080fd5b6118278a838b016117a7565b9098509650602089013591508082111561184057600080fd5b61184c8a838b016117a7565b9096509450604089013591508082111561186557600080fd5b5061187289828a016117a7565b979a9699509497509295939492505050565b60006020828403121561189657600080fd5b5035919050565b60008060008060008060006080888a0312156118b857600080fd5b6118c1886115ce565b965060208801356001600160401b03808211156118dd57600080fd5b6118e98b838c016117a7565b909850965060408a013591508082111561190257600080fd5b61190e8b838c016117a7565b909650945060608a013591508082111561192757600080fd5b506119348a828b016115ea565b989b979a50959850939692959293505050565b60006020828403121561195957600080fd5b6115c7826115ce565b6000806020838503121561197557600080fd5b82356001600160401b0381111561198b57600080fd5b611997858286016117a7565b90969095509350505050565b600080604083850312156119b657600080fd5b6119bf836115ce565b946020939093013593505050565b600082601f8301126119de57600080fd5b813560206001600160401b038211156119f9576119f961168b565b8160051b611a088282016116a1565b9283528481018201928281019087851115611a2257600080fd5b83870192505b848310156114f457823582529183019190830190611a28565b600080600080600060a08688031215611a5957600080fd5b611a62866115ce565b9450611a70602087016115ce565b935060408601356001600160401b0380821115611a8c57600080fd5b611a9889838a016119cd565b94506060880135915080821115611aae57600080fd5b611aba89838a016119cd565b93506080880135915080821115611ad057600080fd5b50611add888289016116d1565b9150509295509295909350565b60008060008060408587031215611b0057600080fd5b84356001600160401b0380821115611b1757600080fd5b611b23888389016117a7565b90965094506020870135915080821115611b3c57600080fd5b5061167f878288016117a7565b600080600080600060a08688031215611b6157600080fd5b611b6a866115ce565b9450611b78602087016115ce565b9350604086013592506060860135915060808601356001600160401b03811115611ba157600080fd5b611add888289016116d1565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03868116825285166020820152604081018490526080606082018190526000906114f49083018486611bad565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611c3757600080fd5b8301803591506001600160401b03821115611c5157600080fd5b60200191503681900382131561162b57600080fd5b600060018201611c8657634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526025908201527f5a69766f654f776e61626c654c6f636b65643a3a756e6c6f636b65642829206c6040820152641bd8dad95960da1b606082015260800190565b600060208284031215611ce457600080fd5b5051919050565b600060208284031215611cfd57600080fd5b815180151581146115c757600080fd5b60005b83811015611d28578181015183820152602001611d10565b50506000910152565b60008251611d43818460208701611d0d565b9190910192915050565b6020815260008251806020840152611d6c816040850160208701611d0d565b601f01601f1916919091016040019291505056fea26469706673582212200ce3ac5852fdd6c616524c2786a391b90ff70cf4b8f34e36e579f00c4d6c146e64736f6c63430008100033655f4f43595f4356585f4d6f64756c61723a3a636f6e7374727563746f722829",
    "sourceMap": "967:7921:85:-:0;;;1379:42:86;1337:84;;5231:3285:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1219:32:72;736:10:46;1219:18:72;:32::i;:::-;5736:1:85;5716:17;:21;;;5708:93;;;;-1:-1:-1;;;5708:93:85;;4375:2:120;5708:93:85;;;4357:21:120;4414:2;4394:18;;;4387:30;-1:-1:-1;;;;;;;;;;;4433:18:120;;;4426:62;4524:29;4504:18;;;4497:57;4571:19;;5708:93:85;;;;;;;;;5847:1;5820:17;:24;:28;5812:93;;;;-1:-1:-1;;;5812:93:85;;4803:2:120;5812:93:85;;;4785:21:120;4842:2;4822:18;;;4815:30;-1:-1:-1;;;;;;;;;;;4861:18:120;;;4854:62;4952:22;4932:18;;;4925:50;4992:19;;5812:93:85;4601:416:120;5812:93:85;5958:1;5924:31;:35;;;5916:115;;;;-1:-1:-1;;;5916:115:85;;5224:2:120;5916:115:85;;;5206:21:120;5263:2;5243:18;;;5236:30;-1:-1:-1;;;;;;;;;;;5282:18:120;;;5275:62;5373:34;5353:18;;;5346:62;-1:-1:-1;;;5424:19:120;;;5417:34;5468:19;;5916:115:85;5022:471:120;5916:115:85;6044:37;6062:15;6078:1;6062:18;;;;;;;;:::i;:::-;;;;;;;6044:17;;;:37;;:::i;:::-;6098:15;6114:1;6098:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6092:24:85;;;;;6127:19;:42;;-1:-1:-1;;;;;;6127:42:85;;;;;;;;;6201:58;;-1:-1:-1;;;6201:58:85;;;;;5776:25:120;;;6201:43:85;;5749:18:120;;6201:58:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;;6180:18;:90;;-1:-1:-1;;;;;;6180:90:85;-1:-1:-1;;;;;6180:90:85;;;;;;;;;6299:29;;;;-1:-1:-1;;6299:29:85;;;;:::i;:::-;;;;;;;6281:15;;:47;;;;;;;;;;;;;;;;;;6354:13;6339:12;:28;;;;6393:26;6420:1;6393:29;;;;;;;;:::i;:::-;;;;;;;;;;;6378:12;:44;;-1:-1:-1;;6378:44:85;;;;;;;;;;;;6433:30;:64;;-1:-1:-1;;;;6433:64:85;-1:-1:-1;;;6378:44:85;6433:64;;;;;;;;;;;;;;6574:12;;;;:20;;-1:-1:-1;6574:20:85;6570:183;;6616:7;6611:131;6633:17;:24;6629:1;:28;;;6611:131;;;6683:16;6705:17;6723:1;6705:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6683:43;;;;;;;-1:-1:-1;6683:43:85;;;;;;;;;;-1:-1:-1;;;;;;6683:43:85;-1:-1:-1;;;;;6683:43:85;;;;;;;;;6659:3;;;;:::i;:::-;;;;6611:131;;;;6570:183;6773:15;;;;:23;;:15;:23;6769:985;;6857:30;;6853:34;;-1:-1:-1;;;6857:30:85;;;;6853:1;:34;:::i;:::-;6821:67;;:20;:27;:67;6813:159;;;;-1:-1:-1;;;6813:159:85;;7370:2:120;6813:159:85;;;7352:21:120;7409:2;7389:18;;;7382:30;-1:-1:-1;;;;;;;;;;;7428:18:120;;;7421:62;7519:34;7499:18;;;7492:62;-1:-1:-1;;;7570:19:120;;;7563:45;7625:19;;6813:159:85;7168:482:120;6813:159:85;6987:4;:17;;-1:-1:-1;;;;;;6987:17:85;-1:-1:-1;;;;;6987:17:85;;;;;;;;;;7035:58;;-1:-1:-1;;;7035:58:85;;;;;5776:25:120;;;7035:43:85;;;;;;5749:18:120;;7035:58:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;7019:13;:82;;-1:-1:-1;;;;;;7019:82:85;;;-1:-1:-1;;;;;7019:82:85;;;;;;;7116:10;:27;;;;;;;;;;7158:21;:46;;;;;;;;;;;;;;-1:-1:-1;7229:140:85;7251:20;:27;7247:1;:31;;;7229:140;;;7304:19;7329:20;7350:1;7329:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;7304:49;;;;;;;-1:-1:-1;7304:49:85;;;;;;;;;;-1:-1:-1;;;;;;7304:49:85;-1:-1:-1;;;;;7304:49:85;;;;;;;;;7280:3;;;;:::i;:::-;;;;7229:140;;;-1:-1:-1;7400:4:85;;7387:27;;-1:-1:-1;;;7387:27:85;;7400:4;7387:27;;;5776:25:120;-1:-1:-1;;;;;7387:45:85;;;;7400:4;;7387:24;;5749:18:120;;7387:27:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7387:45:85;;7383:358;;7491:4;;7478:27;;-1:-1:-1;;;7478:27:85;;7491:4;7478:27;;;5776:25:120;-1:-1:-1;;;;;7491:4:85;;;;7478:24;;5749:18:120;;7478:27:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7453:22;:52;;-1:-1:-1;;;;;;7453:52:85;-1:-1:-1;;;;;7453:52:85;;;;;;;;;;7524:15;:19;;-1:-1:-1;;;;;;7524:19:85;;;7383:358;;;7582:4;;7569:27;;-1:-1:-1;;;7569:27:85;;7582:4;7569:27;;;5776:25:120;-1:-1:-1;;;;;7569:45:85;;;;7582:4;;7569:24;;5749:18:120;;7569:27:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7569:45:85;;7565:176;;7673:4;;7660:27;;-1:-1:-1;;;7660:27:85;;7673:4;7660:27;;;5776:25:120;-1:-1:-1;;;;;7673:4:85;;;;7660:24;;5749:18:120;;7660:27:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7635:22;:52;;-1:-1:-1;;;;;;7635:52:85;-1:-1:-1;;;;;7635:52:85;;;;;;;;;;7706:15;:19;;-1:-1:-1;;;;;;7706:19:85;-1:-1:-1;7706:19:85;;;7565:176;7770:15;;;;:24;;:15;:24;7766:743;;7850:17;7819:48;;:20;:27;:48;7811:165;;;;-1:-1:-1;;;7811:165:85;;8450:2:120;7811:165:85;;;8432:21:120;8489:3;8469:18;;;8462:31;-1:-1:-1;;;;;;;;;;;8509:18:120;;;8502:62;8600:34;8580:18;;;8573:62;8672:34;8651:19;;;8644:63;-1:-1:-1;;;8723:19:120;;;8716:39;8772:19;;7811:165:85;8248:549:120;7811:165:85;7991:4;:17;;-1:-1:-1;;;;;;7991:17:85;-1:-1:-1;;;;;7991:17:85;;;;;;;;;;8039:58;;-1:-1:-1;;;8039:58:85;;;;;5776:25:120;;;8039:43:85;;;;;;5749:18:120;;8039:58:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;8023:13;:82;;-1:-1:-1;;;;;;8023:82:85;-1:-1:-1;;;;;8023:82:85;;;;;;;;;-1:-1:-1;8302:196:85;8324:17;8320:21;;:1;:21;;;8302:196;;;8399:4;;8382:31;;-1:-1:-1;;;8382:31:85;;8976:4:120;8964:17;;8382:31:85;;;8946:36:120;8367:9:85;;-1:-1:-1;;;;;8399:4:85;;8382:28;;8919:18:120;;8382:31:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8367:47;;;;;;;-1:-1:-1;8367:47:85;;;;;;;;;;;;-1:-1:-1;;;;;;8367:47:85;-1:-1:-1;;;;;8367:47:85;;;;;;;;;8458:23;;8433:19;;8458:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;8433:49;;;;;;;-1:-1:-1;8433:49:85;;;;;;;;;;-1:-1:-1;;;;;;8433:49:85;-1:-1:-1;;;;;8433:49:85;;;;;;;;;8343:3;;;;:::i;:::-;;;;8302:196;;;;7766:743;5231:3285;;;;;;;;;;;967:7921;;3553:191:72;3627:16;3646:6;;-1:-1:-1;;;;;3663:17:72;;;-1:-1:-1;;;;;;3663:17:72;;;;;;3696:40;;3646:6;;;;;;;3696:40;;3627:16;3696:40;3616:128;3553:191;:::o;2732:234::-;1384:13;:11;:13::i;:::-;1550:6:::1;::::0;-1:-1:-1;;;1550:6:72;::::1;;;1549:7;1541:57;;;::::0;-1:-1:-1;;;1541:57:72;;9195:2:120;1541:57:72::1;::::0;::::1;9177:21:120::0;9234:2;9214:18;;;9207:30;9273:34;9253:18;;;9246:62;-1:-1:-1;;;9324:18:120;;;9317:35;9369:19;;1541:57:72::1;8993:401:120::0;1541:57:72::1;-1:-1:-1::0;;;;;2830:22:72;::::2;2822:97;;;::::0;-1:-1:-1;;;2822:97:72;;9601:2:120;2822:97:72::2;::::0;::::2;9583:21:120::0;9640:2;9620:18;;;9613:30;9679:34;9659:18;;;9652:62;9750:32;9730:18;;;9723:60;9800:19;;2822:97:72::2;9399:426:120::0;2822:97:72::2;2930:28;2949:8:::0;2930:18:::2;:28::i;:::-;2732:234:::0;:::o;1864:155::-;1745:7;1772:6;-1:-1:-1;;;;;1772:6:72;736:10:46;1928:23:72;1920:91;;;;-1:-1:-1;;;1920:91:72;;10032:2:120;1920:91:72;;;10014:21:120;10071:2;10051:18;;;10044:30;10110:34;10090:18;;;10083:62;10181:25;10161:18;;;10154:53;10224:19;;1920:91:72;9830:419:120;1920:91:72;1864:155::o;14:127:120:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:120;247:40;;-1:-1:-1;;;;;302:34:120;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:120:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:120;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:120;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:120;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:683::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1105:15;;;1191:1;1187:10;;;;1175:23;;1171:32;;;1136:12;;;;1215:15;;;1212:35;;;1243:1;1240;1233:12;1212:35;1279:2;1271:6;1267:15;1291:159;1307:6;1302:3;1299:15;1291:159;;;1373:34;1403:3;1373:34;:::i;:::-;1361:47;;1428:12;;;;1324;;1291:159;;;-1:-1:-1;1468:5:120;796:683;-1:-1:-1;;;;;;796:683:120:o;1484:164::-;1560:13;;1609;;1602:21;1592:32;;1582:60;;1638:1;1635;1628:12;1653:677;1715:5;1768:3;1761:4;1753:6;1749:17;1745:27;1735:55;;1786:1;1783;1776:12;1735:55;1815:6;1809:13;1841:4;1865:60;1881:43;1921:2;1881:43;:::i;1865:60::-;1959:15;;;2045:1;2041:10;;;;2029:23;;2025:32;;;1990:12;;;;2069:15;;;2066:35;;;2097:1;2094;2087:12;2066:35;2133:2;2125:6;2121:15;2145:156;2161:6;2156:3;2153:15;2145:156;;;2227:31;2254:3;2227:31;:::i;:::-;2215:44;;2279:12;;;;2178;;2145:156;;2335:160;2412:13;;2465:4;2454:16;;2444:27;;2434:55;;2485:1;2482;2475:12;2500:1668;2753:6;2761;2769;2777;2785;2793;2801;2809;2817;2825;2833:7;2887:3;2875:9;2866:7;2862:23;2858:33;2855:53;;;2904:1;2901;2894:12;2855:53;2931:16;;-1:-1:-1;;;;;2959:30:120;;2956:50;;;3002:1;2999;2992:12;2956:50;3025:72;3089:7;3080:6;3069:9;3065:22;3025:72;:::i;:::-;3143:2;3128:18;;3122:25;3015:82;;-1:-1:-1;3122:25:120;-1:-1:-1;;;;;;3159:32:120;;3156:52;;;3204:1;3201;3194:12;3156:52;3227:71;3290:7;3279:8;3268:9;3264:24;3227:71;:::i;:::-;3217:81;;;3317:49;3362:2;3351:9;3347:18;3317:49;:::i;:::-;3307:59;;3385:49;3430:2;3419:9;3415:18;3385:49;:::i;:::-;3480:3;3465:19;;3459:26;3375:59;;-1:-1:-1;;;;;;3497:32:120;;3494:52;;;3542:1;3539;3532:12;3494:52;3565:74;3631:7;3620:8;3609:9;3605:24;3565:74;:::i;:::-;3555:84;;;3658:50;3703:3;3692:9;3688:19;3658:50;:::i;:::-;3648:60;;3727:50;3772:3;3761:9;3757:19;3727:50;:::i;:::-;3717:60;;3796:48;3839:3;3828:9;3824:19;3796:48;:::i;:::-;3786:58;;3863:48;3906:3;3895:9;3891:19;3863:48;:::i;:::-;3951:3;3936:19;;3930:26;4002:3;3987:19;;3981:26;3853:58;;-1:-1:-1;3930:26:120;-1:-1:-1;;;;;;4019:32:120;;4016:52;;;4064:1;4061;4054:12;4016:52;4088:74;4154:7;4143:8;4132:9;4128:24;4088:74;:::i;:::-;4077:85;;;2500:1668;;;;;;;;;;;;;;:::o;5498:127::-;5559:10;5554:3;5550:20;5547:1;5540:31;5590:4;5587:1;5580:15;5614:4;5611:1;5604:15;5812:886;5909:6;5962:3;5950:9;5941:7;5937:23;5933:33;5930:53;;;5979:1;5976;5969:12;5930:53;6012:2;6006:9;6054:3;6042:16;;-1:-1:-1;;;;;6073:34:120;;6109:22;;;6070:62;6067:88;;;6135:18;;:::i;:::-;6171:2;6164:22;6210:40;6240:9;6210:40;:::i;:::-;6202:6;6195:56;6284:49;6329:2;6318:9;6314:18;6284:49;:::i;:::-;6279:2;6271:6;6267:15;6260:74;6367:49;6412:2;6401:9;6397:18;6367:49;:::i;:::-;6362:2;6354:6;6350:15;6343:74;6450:49;6495:2;6484:9;6480:18;6450:49;:::i;:::-;6445:2;6437:6;6433:15;6426:74;6534:50;6579:3;6568:9;6564:19;6534:50;:::i;:::-;6528:3;6520:6;6516:16;6509:76;6619:47;6661:3;6650:9;6646:19;6619:47;:::i;:::-;6613:3;6601:16;;6594:73;6605:6;5812:886;-1:-1:-1;;;5812:886:120:o;6703:127::-;6764:10;6759:3;6755:20;6752:1;6745:31;6795:4;6792:1;6785:15;6819:4;6816:1;6809:15;6835:175;6872:3;6916:4;6909:5;6905:16;6945:4;6936:7;6933:17;6930:43;;6953:18;;:::i;:::-;7002:1;6989:15;;6835:175;-1:-1:-1;;6835:175:120:o;7015:148::-;7103:4;7082:12;;;7096;;;7078:31;;7121:13;;7118:39;;;7137:18;;:::i;:::-;7015:148;;;;:::o;7845:208::-;7915:6;7968:2;7956:9;7947:7;7943:23;7939:32;7936:52;;;7984:1;7981;7974:12;7936:52;8007:40;8037:9;8007:40;:::i;:::-;7997:50;7845:208;-1:-1:-1;;;7845:208:120:o;9830:419::-;967:7921:85;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103a45760003560e01c8063945c9142116101e9578063d9821e3b1161010f578063eada4cd7116100ad578063f85fcb1a1161007c578063f85fcb1a1461077c578063f988dc3f14610785578063fd76f59d1461078e578063ff0459ba146107a157600080fd5b8063eada4cd71461072e578063f23a6e6114610741578063f2fde38b14610760578063f5a047851461077357600080fd5b8063dbbc65d9116100e9578063dbbc65d91461070f578063dd913bdb14610450578063e21c81d31461071c578063e7f446291461045057600080fd5b8063d9821e3b146106c3578063da456cbd146106d6578063da87d2cf146106fc57600080fd5b8063b3da6b0811610187578063c9c6a41411610156578063c9c6a41414610689578063cf10b7ab14610450578063cf3090121461069c578063d0991c84146106b057600080fd5b8063b3da6b081461063b578063b892bcc014610644578063bc197c8114610657578063be8d80611461067657600080fd5b8063ab2637af116101c3578063ab2637af14610616578063aeb3264b1461061f578063b0607cf814610450578063b2c500f01461062857600080fd5b8063945c9142146105e8578063a0c9455a14610603578063a4a3e79d146104fe57600080fd5b80633eda81ad116102ce578063607cd6491161026c5780637dbcdbc11161023b5780637dbcdbc1146105b157806384476591146105c45780638b648ee2146104505780638da5cb5b146105d757600080fd5b8063607cd6491461057b57806364c77735146104fe578063715018a61461058e578063759cb53b1461059657600080fd5b80634d65dd1c116102a85780634d65dd1c1461052f57806358289c7e146105425780635e860430146105555780635edb2ba41461056857600080fd5b80633eda81ad146104fe578063422b20181461050557806349a5e73b1461051857600080fd5b80631af1ca97116103465780632dd3d9ef116103155780632dd3d9ef146104c45780632f08d48b146104505780633c117244146104505780633ce8d432146104d757600080fd5b80631af1ca971461047e5780631d9389e91461049e578063210663e4146104b1578063215cccdd1461045057600080fd5b806315e987441161038257806315e987441461041257806316f0115b146104255780631852b3831461045057806319ce95f41461045757600080fd5b806301ffc9a7146103a957806312052176146103d1578063150b7a02146103e6575b600080fd5b6103bc6103b736600461159d565b6107b4565b60405190151581526020015b60405180910390f35b6103e46103df366004611632565b6107eb565b005b6103f96103f4366004611740565b61085d565b6040516001600160e01b031990911681526020016103c8565b6103e46104203660046117eb565b61086e565b600e54610438906001600160a01b031681565b6040516001600160a01b0390911681526020016103c8565b60006103bc565b6104387f000000000000000000000000000000000000000000000000000000000000000081565b60135461048b90600f0b81565b604051600f9190910b81526020016103c8565b6103e46104ac366004611632565b6109df565b601054610438906001600160a01b031681565b6104386104d2366004611884565b610a4a565b6104387f000000000000000000000000000000000000000000000000000000000000000081565b60016103bc565b6103e461051336600461189d565b610a74565b610521600c5481565b6040519081526020016103c8565b600a54610438906001600160a01b031681565b6103e4610550366004611947565b610ae3565b601254610438906001600160a01b031681565b601154610438906001600160a01b031681565b6103e4610589366004611962565b610bbe565b6103e4610cc5565b610438734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81565b6103e46105bf366004611947565b610d03565b6103e46105d23660046119a3565b610d64565b6000546001600160a01b0316610438565b61043873d533a949740bb3306d119cc777fa900ba034cd5281565b610438610611366004611884565b610dc7565b61052160045481565b61052160025481565b600f54610438906001600160a01b031681565b61052160055481565b6103e46106523660046117eb565b610dd7565b6103f9610665366004611a41565b63bc197c8160e01b95945050505050565b610521610684366004611884565b610f3f565b6103e4610697366004611aea565b610f60565b6000546103bc90600160a01b900460ff1681565b6104386106be366004611884565b610ff3565b6103e46106d13660046119a3565b611003565b6012546106ea90600160a01b900460ff1681565b60405160ff90911681526020016103c8565b61052161070a366004611884565b611031565b6003546103bc9060ff1681565b6003546103bc90610100900460ff1681565b600b54610438906001600160a01b031681565b6103f961074f366004611b49565b63f23a6e6160e01b95945050505050565b6103e461076e366004611947565b611041565b61052160065481565b61052160075481565b61052160015481565b6103e461079c36600461189d565b6110f8565b6103e46107af366004611aea565b611165565b60006001600160e01b03198216630271189760e51b14806107e557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6107f3611237565b60405162461bcd60e51b815260206004820152603460248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65724552433732604482015273312829202163616e50756c6c455243373231282960601b60648201526084015b60405180910390fd5b630a85bd0160e11b5b949350505050565b610876611237565b60405162461bcd60e51b815260206004820152603e60248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65724d756c746960448201527f4552433732312829202163616e50756c6c4d756c7469455243373231282900006064820152608401610854565b858110156109d6578686828181106108fe576108fe611c0a565b90506020020160208101906109139190611947565b6001600160a01b031663b88d4fde306109346000546001600160a01b031690565b88888681811061094657610946611c0a565b9050602002013587878781811061095f5761095f611c0a565b90506020028101906109719190611c20565b6040518663ffffffff1660e01b8152600401610991959493929190611bd6565b600060405180830381600087803b1580156109ab57600080fd5b505af11580156109bf573d6000803e3d6000fd5b5050505080806109ce90611c66565b9150506108e4565b50505050505050565b6109e7611237565b60405162461bcd60e51b815260206004820152603260248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b65724552433732312860448201527129202163616e50757368455243373231282960701b6064820152608401610854565b60158181548110610a5a57600080fd5b6000918252602090912001546001600160a01b0316905081565b610a7c611237565b60405162461bcd60e51b815260206004820152603660248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b6572455243313160448201527535352829202163616e50756c6c45524331313535282960501b6064820152608401610854565b610aeb611237565b600054600160a01b900460ff1615610b155760405162461bcd60e51b815260040161085490611c8d565b6001600160a01b038116610b9f5760405162461bcd60e51b815260206004820152604560248201527f5a69766f654f776e61626c654c6f636b65643a3a7472616e736665724f776e6560448201527f7273686970416e644c6f636b2829206e65774f776e6572203d3d206164647265606482015264737328302960d81b608482015260a401610854565b6000805460ff60a01b1916600160a01b179055610bbb816112b7565b50565b610bc6611237565b60005b81811015610cc057610cae610be66000546001600160a01b031690565b848484818110610bf857610bf8611c0a565b9050602002016020810190610c0d9190611947565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190611cd2565b858585818110610c8957610c89611c0a565b9050602002016020810190610c9e9190611947565b6001600160a01b03169190611307565b80610cb881611c66565b915050610bc9565b505050565b610ccd611237565b600054600160a01b900460ff1615610cf75760405162461bcd60e51b815260040161085490611c8d565b610d0160006112b7565b565b610d0b611237565b60405162461bcd60e51b815260206004820152602860248201527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65722829202163604482015267616e50756c6c282960c01b6064820152608401610854565b610d6c611237565b60405162461bcd60e51b815260206004820152602660248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b65722829202163616e60448201526550757368282960d01b6064820152608401610854565b5050565b600d8181548110610a5a57600080fd5b610ddf611237565b60405162461bcd60e51b815260206004820152603c60248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b65724d756c7469455260448201527f433732312829202163616e507573684d756c74694552433732312829000000006064820152608401610854565b858110156109d657868682818110610e6757610e67611c0a565b9050602002016020810190610e7c9190611947565b6001600160a01b031663b88d4fde610e9c6000546001600160a01b031690565b30888886818110610eaf57610eaf611c0a565b90506020020135878787818110610ec857610ec8611c0a565b9050602002810190610eda9190611c20565b6040518663ffffffff1660e01b8152600401610efa959493929190611bd6565b600060405180830381600087803b158015610f1457600080fd5b505af1158015610f28573d6000803e3d6000fd5b505050508080610f3790611c66565b915050610e4d565b60088181548110610f4f57600080fd5b600091825260209091200154905081565b610f68611237565b60005b83811015610fec57610fda610f886000546001600160a01b031690565b30858585818110610f9b57610f9b611c0a565b90506020020135888886818110610fb457610fb4611c0a565b9050602002016020810190610fc99190611947565b6001600160a01b031692919061136a565b80610fe481611c66565b915050610f6b565b5050505050565b60148181548110610a5a57600080fd5b61100b611237565b610dc36110206000546001600160a01b031690565b6001600160a01b0384169083611307565b60098181548110610f4f57600080fd5b611049611237565b600054600160a01b900460ff16156110735760405162461bcd60e51b815260040161085490611c8d565b6001600160a01b0381166110ef5760405162461bcd60e51b815260206004820152603e60248201527f5a69766f654f776e61626c654c6f636b65643a3a7472616e736665724f776e6560448201527f72736869702829206e65774f776e6572203d3d206164647265737328302900006064820152608401610854565b610bbb816112b7565b611100611237565b60405162461bcd60e51b815260206004820152603460248201527f5a69766f654c6f636b65723a3a70757368546f4c6f636b6572455243313135356044820152732829202163616e5075736845524331313535282960601b6064820152608401610854565b61116d611237565b6040805162461bcd60e51b81526020600482015260248101919091527f5a69766f654c6f636b65723a3a70756c6c46726f6d4c6f636b65724d756c746960448201527f5061727469616c2829202163616e50756c6c4d756c74695061727469616c28296064820152608401610854565b83811015610fec576112256111fa6000546001600160a01b031690565b84848481811061120c5761120c611c0a565b90506020020135878785818110610c8957610c89611c0a565b8061122f81611c66565b9150506111dd565b6000546001600160a01b03163314610d015760405162461bcd60e51b815260206004820152603760248201527f5a69766f654f776e61626c654c6f636b65643a3a5f636865636b4f776e65722060448201527f6f776e6572282920213d205f6d736753656e64657228290000000000000000006064820152608401610854565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038316602482015260448101829052610cc090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113a8565b6040516001600160a01b03808516602483015283166044820152606481018290526113a29085906323b872dd60e01b90608401611333565b50505050565b60006113fd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661147a9092919063ffffffff16565b805190915015610cc0578080602001905181019061141b9190611ceb565b610cc05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610854565b6060610866848460008585600080866001600160a01b031685876040516114a19190611d31565b60006040518083038185875af1925050503d80600081146114de576040519150601f19603f3d011682016040523d82523d6000602084013e6114e3565b606091505b50915091506114f4878383876114ff565b979650505050505050565b6060831561156e578251600003611567576001600160a01b0385163b6115675760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610854565b5081610866565b61086683838151156115835781518083602001fd5b8060405162461bcd60e51b81526004016108549190611d4d565b6000602082840312156115af57600080fd5b81356001600160e01b0319811681146115c757600080fd5b9392505050565b80356001600160a01b03811681146115e557600080fd5b919050565b60008083601f8401126115fc57600080fd5b5081356001600160401b0381111561161357600080fd5b60208301915083602082850101111561162b57600080fd5b9250929050565b6000806000806060858703121561164857600080fd5b611651856115ce565b93506020850135925060408501356001600160401b0381111561167357600080fd5b61167f878288016115ea565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116c9576116c961168b565b604052919050565b600082601f8301126116e257600080fd5b81356001600160401b038111156116fb576116fb61168b565b61170e601f8201601f19166020016116a1565b81815284602083860101111561172357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561175657600080fd5b61175f856115ce565b935061176d602086016115ce565b92506040850135915060608501356001600160401b0381111561178f57600080fd5b61179b878288016116d1565b91505092959194509250565b60008083601f8401126117b957600080fd5b5081356001600160401b038111156117d057600080fd5b6020830191508360208260051b850101111561162b57600080fd5b6000806000806000806060878903121561180457600080fd5b86356001600160401b038082111561181b57600080fd5b6118278a838b016117a7565b9098509650602089013591508082111561184057600080fd5b61184c8a838b016117a7565b9096509450604089013591508082111561186557600080fd5b5061187289828a016117a7565b979a9699509497509295939492505050565b60006020828403121561189657600080fd5b5035919050565b60008060008060008060006080888a0312156118b857600080fd5b6118c1886115ce565b965060208801356001600160401b03808211156118dd57600080fd5b6118e98b838c016117a7565b909850965060408a013591508082111561190257600080fd5b61190e8b838c016117a7565b909650945060608a013591508082111561192757600080fd5b506119348a828b016115ea565b989b979a50959850939692959293505050565b60006020828403121561195957600080fd5b6115c7826115ce565b6000806020838503121561197557600080fd5b82356001600160401b0381111561198b57600080fd5b611997858286016117a7565b90969095509350505050565b600080604083850312156119b657600080fd5b6119bf836115ce565b946020939093013593505050565b600082601f8301126119de57600080fd5b813560206001600160401b038211156119f9576119f961168b565b8160051b611a088282016116a1565b9283528481018201928281019087851115611a2257600080fd5b83870192505b848310156114f457823582529183019190830190611a28565b600080600080600060a08688031215611a5957600080fd5b611a62866115ce565b9450611a70602087016115ce565b935060408601356001600160401b0380821115611a8c57600080fd5b611a9889838a016119cd565b94506060880135915080821115611aae57600080fd5b611aba89838a016119cd565b93506080880135915080821115611ad057600080fd5b50611add888289016116d1565b9150509295509295909350565b60008060008060408587031215611b0057600080fd5b84356001600160401b0380821115611b1757600080fd5b611b23888389016117a7565b90965094506020870135915080821115611b3c57600080fd5b5061167f878288016117a7565b600080600080600060a08688031215611b6157600080fd5b611b6a866115ce565b9450611b78602087016115ce565b9350604086013592506060860135915060808601356001600160401b03811115611ba157600080fd5b611add888289016116d1565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03868116825285166020820152604081018490526080606082018190526000906114f49083018486611bad565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611c3757600080fd5b8301803591506001600160401b03821115611c5157600080fd5b60200191503681900382131561162b57600080fd5b600060018201611c8657634e487b7160e01b600052601160045260246000fd5b5060010190565b60208082526025908201527f5a69766f654f776e61626c654c6f636b65643a3a756e6c6f636b65642829206c6040820152641bd8dad95960da1b606082015260800190565b600060208284031215611ce457600080fd5b5051919050565b600060208284031215611cfd57600080fd5b815180151581146115c757600080fd5b60005b83811015611d28578181015183820152602001611d10565b50506000910152565b60008251611d43818460208701611d0d565b9190910192915050565b6020815260008251806020840152611d6c816040850160208701611d0d565b601f01601f1916919091016040019291505056fea26469706673582212200ce3ac5852fdd6c616524c2786a391b90ff70cf4b8f34e36e579f00c4d6c146e64736f6c63430008100033",
    "sourceMap": "967:7921:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:223:31;;;;;;:::i;:::-;;:::i;:::-;;;470:14:120;;463:22;445:41;;433:2;418:18;402:223:31;;;;;;;;8151:297:62;;;;;;:::i;:::-;;:::i;:::-;;607:207:43;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;3234:33:120;;;3216:52;;3204:2;3189:18;607:207:43;3072:202:120;9307:423:62;;;;;;:::i;:::-;;:::i;2949:19:85:-;;;;;-1:-1:-1;;;;;2949:19:85;;;;;;-1:-1:-1;;;;;4919:32:120;;;4901:51;;4889:2;4874:18;2949:19:85;4755:203:120;4125:96:62;4184:4;4125:96;;1337:84:86;;;;;3431:29:85;;;;;;;;;;;;5136:2:120;5125:22;;;;5107:41;;5095:2;5080:18;3431:29:85;4963:191:120;7641:293:62;;;;;;:::i;:::-;;:::i;3185:25:85:-;;;;;-1:-1:-1;;;;;3185:25:85;;;3579:36;;;;;;:::i;:::-;;:::i;1158:28::-;;;;;8693:90;8771:4;8693:90;;10661:347:62;;;;;;:::i;:::-;;:::i;2561:27:85:-;;;;;;;;;6630:25:120;;;6618:2;6603:18;2561:27:85;6484:177:120;2440:34:85;;;;;-1:-1:-1;;;;;2440:34:85;;;3121:272:72;;;;;;:::i;:::-;;:::i;3261:36:85:-;;;;;-1:-1:-1;;;;;3261:36:85;;;3217:37;;;;;-1:-1:-1;;;;;3217:37:85;;;6475:343:62;;;;;;:::i;:::-;;:::i;2370:112:72:-;;;:::i;2718:72:85:-;;2748:42;2718:72;;5091:233:62;;;;;;:::i;:::-;;:::i;4735:232::-;;;;;;:::i;:::-;;:::i;1699:87:72:-;1745:7;1772:6;-1:-1:-1;;;;;1772:6:72;1699:87;;2797:72:85;;2827:42;2797:72;;2876:33;;;;;;:::i;:::-;;:::i;1673:23::-;;;;;;1333:29;;;;;;2975:28;;;;;-1:-1:-1;;;;;2975:28:85;;;1770:29;;;;;;8668:419:62;;;;;;:::i;:::-;;:::i;750:255:30:-;;;;;;:::i;:::-;-1:-1:-1;;;750:255:30;;;;;;;;2158:38:85;;;;;;:::i;:::-;;:::i;5994:354:62:-;;;;;;:::i;:::-;;:::i;805:18:72:-;;;;;-1:-1:-1;;;805:18:72;;;;;;3506:26:85;;;;;;:::i;:::-;;:::i;5510:245:62:-;;;;;;:::i;:::-;;:::i;3381:43:85:-;;;;;-1:-1:-1;;;3381:43:85;;;;;;;;;10173:4:120;10161:17;;;10143:36;;10131:2;10116:18;3381:43:85;10001:184:120;2282:40:85;;;;;;:::i;:::-;;:::i;1452:27::-;;;;;;;;;1539:24;;;;;;;;;;;;2481:33;;;;;-1:-1:-1;;;;;2481:33:85;;;515:227:30;;;;;;:::i;:::-;-1:-1:-1;;;515:227:30;;;;;;;;2732:234:72;;;;;;:::i;:::-;;:::i;1938:27:85:-;;;;;;2048;;;;;;1229:36;;;;;;10024:343:62;;;;;;:::i;:::-;;:::i;7057:367::-;;;;;;:::i;:::-;;:::i;402:223:31:-;504:4;-1:-1:-1;;;;;;528:49:31;;-1:-1:-1;;;528:49:31;;:89;;-1:-1:-1;;;;;;;;;;963:40:52;;;581:36:31;521:96;402:223;-1:-1:-1;;402:223:31:o;8151:297:62:-;1384:13:72;:11;:13::i;:::-;8272:80:62::1;::::0;-1:-1:-1;;;8272:80:62;;11003:2:120;8272:80:62::1;::::0;::::1;10985:21:120::0;11042:2;11022:18;;;11015:30;11081:34;11061:18;;;11054:62;-1:-1:-1;;;11132:18:120;;;11125:50;11192:19;;8272:80:62::1;;;;;;;;607:207:43::0;-1:-1:-1;;;607:207:43;;;;;;;:::o;9307:423:62:-;1384:13:72;:11;:13::i;:::-;9459:95:62::1;::::0;-1:-1:-1;;;9459:95:62;;12215:2:120;9459:95:62::1;::::0;::::1;12197:21:120::0;12254:2;12234:18;;;12227:30;12293:34;12273:18;;;12266:62;12364:32;12344:18;;;12337:60;12414:19;;9459:95:62::1;12013:426:120::0;9565:158:62::1;9585:17:::0;;::::1;9565:158;;;9638:6;;9645:1;9638:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9623:42:62::1;;9674:4;9681:7;1745::72::0;1772:6;-1:-1:-1;;;;;1772:6:72;;1699:87;9681:7:62::1;9690:8;;9699:1;9690:11;;;;;;;:::i;:::-;;;;;;;9703:4;;9708:1;9703:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;9623:88;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9604:3;;;;;:::i;:::-;;;;9565:158;;;;9307:423:::0;;;;;;:::o;7641:293::-;1384:13:72;:11;:13::i;:::-;7760:78:62::1;::::0;-1:-1:-1;;;7760:78:62;;13541:2:120;7760:78:62::1;::::0;::::1;13523:21:120::0;13580:2;13560:18;;;13553:30;13619:34;13599:18;;;13592:62;-1:-1:-1;;;13670:18:120;;;13663:48;13728:19;;7760:78:62::1;13339:414:120::0;3579:36:85;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3579:36:85;;-1:-1:-1;3579:36:85;:::o;10661:347:62:-;1384:13:72;:11;:13::i;:::-;10818:83:62::1;::::0;-1:-1:-1;;;10818:83:62;;13960:2:120;10818:83:62::1;::::0;::::1;13942:21:120::0;13999:2;13979:18;;;13972:30;14038:34;14018:18;;;14011:62;-1:-1:-1;;;14089:18:120;;;14082:52;14151:19;;10818:83:62::1;13758:418:120::0;3121:272:72;1384:13;:11;:13::i;:::-;1550:6:::1;::::0;-1:-1:-1;;;1550:6:72;::::1;;;1549:7;1541:57;;;;-1:-1:-1::0;;;1541:57:72::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3226:22:72;::::2;3218:104;;;::::0;-1:-1:-1;;;3218:104:72;;16017:2:120;3218:104:72::2;::::0;::::2;15999:21:120::0;16056:2;16036:18;;;16029:30;16095:34;16075:18;;;16068:62;16166:34;16146:18;;;16139:62;-1:-1:-1;;;16217:19:120;;;16210:36;16263:19;;3218:104:72::2;15815:473:120::0;3218:104:72::2;3333:6;:13:::0;;-1:-1:-1;;;;3333:13:72::2;-1:-1:-1::0;;;3333:13:72::2;::::0;;3357:28:::2;3376:8:::0;3357:18:::2;:28::i;:::-;3121:272:::0;:::o;6475:343:62:-;1384:13:72;:11;:13::i;:::-;6662:9:62::1;6657:154;6677:17:::0;;::::1;6657:154;;;6716:83;6747:7;1745::72::0;1772:6;-1:-1:-1;;;;;1772:6:72;;1699:87;6747:7:62::1;6763:6;;6770:1;6763:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6756:42;::::0;-1:-1:-1;;;6756:42:62;;6792:4:::1;6756:42;::::0;::::1;4901:51:120::0;-1:-1:-1;;;;;6756:27:62;;;::::1;::::0;::::1;::::0;4874:18:120;;6756:42:62::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6723:6;;6730:1;6723:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6716:30:62::1;::::0;:83;:30:::1;:83::i;:::-;6696:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6657:154;;;;6475:343:::0;;:::o;2370:112:72:-;1384:13;:11;:13::i;:::-;1550:6:::1;::::0;-1:-1:-1;;;1550:6:72;::::1;;;1549:7;1541:57;;;;-1:-1:-1::0;;;1541:57:72::1;;;;;;;:::i;:::-;2444:30:::2;2471:1;2444:18;:30::i;:::-;2370:112::o:0;5091:233:62:-;1384:13:72;:11;:13::i;:::-;5168:62:62::1;::::0;-1:-1:-1;;;5168:62:62;;17103:2:120;5168:62:62::1;::::0;::::1;17085:21:120::0;17142:2;17122:18;;;17115:30;17181:34;17161:18;;;17154:62;-1:-1:-1;;;17232:18:120;;;17225:38;17280:19;;5168:62:62::1;16901:404:120::0;4735:232:62;1384:13:72;:11;:13::i;:::-;4826:60:62::1;::::0;-1:-1:-1;;;4826:60:62;;17512:2:120;4826:60:62::1;::::0;::::1;17494:21:120::0;17551:2;17531:18;;;17524:30;17590:34;17570:18;;;17563:62;-1:-1:-1;;;17641:18:120;;;17634:36;17687:19;;4826:60:62::1;17310:402:120::0;4897:62:62::1;4735:232:::0;;:::o;2876:33:85:-;;;;;;;;;;;;8668:419:62;1384:13:72;:11;:13::i;:::-;8818:93:62::1;::::0;-1:-1:-1;;;8818:93:62;;17919:2:120;8818:93:62::1;::::0;::::1;17901:21:120::0;17958:2;17938:18;;;17931:30;17997:34;17977:18;;;17970:62;18068:30;18048:18;;;18041:58;18116:19;;8818:93:62::1;17717:424:120::0;8922:158:62::1;8942:17:::0;;::::1;8922:158;;;8995:6;;9002:1;8995:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8980:42:62::1;;9023:7;1745::72::0;1772:6;-1:-1:-1;;;;;1772:6:72;;1699:87;9023:7:62::1;9040:4;9047:8;;9056:1;9047:11;;;;;;;:::i;:::-;;;;;;;9060:4;;9065:1;9060:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8980:88;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8961:3;;;;;:::i;:::-;;;;8922:158;;2158:38:85::0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2158:38:85;:::o;5994:354:62:-;1384:13:72;:11;:13::i;:::-;6205:9:62::1;6200:141;6220:17:::0;;::::1;6200:141;;;6259:70;6294:7;1745::72::0;1772:6;-1:-1:-1;;;;;1772:6:72;;1699:87;6294:7:62::1;6311:4;6318:7;;6326:1;6318:10;;;;;;;:::i;:::-;;;;;;;6266:6;;6273:1;6266:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6259:34:62::1;::::0;:70;;:34:::1;:70::i;:::-;6239:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6200:141;;;;5994:354:::0;;;;:::o;3506:26:85:-;;;;;;;;;;;;5510:245:62;1384:13:72;:11;:13::i;:::-;5704:43:62::1;5731:7;1745::72::0;1772:6;-1:-1:-1;;;;;1772:6:72;;1699:87;5731:7:62::1;-1:-1:-1::0;;;;;5704:26:62;::::1;::::0;5740:6;5704:26:::1;:43::i;2282:40:85:-:0;;;;;;;;;;;;2732:234:72;1384:13;:11;:13::i;:::-;1550:6:::1;::::0;-1:-1:-1;;;1550:6:72;::::1;;;1549:7;1541:57;;;;-1:-1:-1::0;;;1541:57:72::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2830:22:72;::::2;2822:97;;;::::0;-1:-1:-1;;;2822:97:72;;19188:2:120;2822:97:72::2;::::0;::::2;19170:21:120::0;19227:2;19207:18;;;19200:30;19266:34;19246:18;;;19239:62;19337:32;19317:18;;;19310:60;19387:19;;2822:97:72::2;18986:426:120::0;2822:97:72::2;2930:28;2949:8;2930:18;:28::i;10024:343:62:-:0;1384:13:72;:11;:13::i;:::-;10179:81:62::1;::::0;-1:-1:-1;;;10179:81:62;;19619:2:120;10179:81:62::1;::::0;::::1;19601:21:120::0;19658:2;19638:18;;;19631:30;19697:34;19677:18;;;19670:62;-1:-1:-1;;;19748:18:120;;;19741:50;19808:19;;10179:81:62::1;19417:416:120::0;7057:367:62;1384:13:72;:11;:13::i;:::-;7186:98:62::1;::::0;;-1:-1:-1;;;7186:98:62;;20040:2:120;7186:98:62::1;::::0;::::1;20022:21:120::0;20059:18;;;20052:30;;;;20118:34;20098:18;;;20091:62;20189:34;20169:18;;;20162:62;20241:19;;7186:98:62::1;19838:428:120::0;7295:122:62::1;7315:17:::0;;::::1;7295:122;;;7354:51;7385:7;1745::72::0;1772:6;-1:-1:-1;;;;;1772:6:72;;1699:87;7385:7:62::1;7394;;7402:1;7394:10;;;;;;;:::i;:::-;;;;;;;7361:6;;7368:1;7361:9;;;;;;;:::i;7354:51::-;7334:3:::0;::::1;::::0;::::1;:::i;:::-;;;;7295:122;;1864:155:72::0;1745:7;1772:6;-1:-1:-1;;;;;1772:6:72;736:10:46;1928:23:72;1920:91;;;;-1:-1:-1;;;1920:91:72;;20473:2:120;1920:91:72;;;20455:21:120;20512:2;20492:18;;;20485:30;20551:34;20531:18;;;20524:62;20622:25;20602:18;;;20595:53;20665:19;;1920:91:72;20271:419:120;3553:191:72;3627:16;3646:6;;-1:-1:-1;;;;;3663:17:72;;;-1:-1:-1;;;;;;3663:17:72;;;;;;3696:40;;3646:6;;;;;;;3696:40;;3627:16;3696:40;3616:128;3553:191;:::o;784:211:37:-;928:58;;-1:-1:-1;;;;;20887:32:120;;928:58:37;;;20869:51:120;20936:18;;;20929:34;;;901:86:37;;921:5;;-1:-1:-1;;;951:23:37;20842:18:120;;928:58:37;;;;-1:-1:-1;;928:58:37;;;;;;;;;;;;;;-1:-1:-1;;;;;928:58:37;-1:-1:-1;;;;;;928:58:37;;;;;;;;;;901:19;:86::i;1003:248::-;1174:68;;-1:-1:-1;;;;;21232:15:120;;;1174:68:37;;;21214:34:120;21284:15;;21264:18;;;21257:43;21316:18;;;21309:34;;;1147:96:37;;1167:5;;-1:-1:-1;;;1197:27:37;21149:18:120;;1174:68:37;20974:375:120;1147:96:37;1003:248;;;;:::o;3851:716::-;4275:23;4301:69;4329:4;4301:69;;;;;;;;;;;;;;;;;4309:5;-1:-1:-1;;;;;4301:27:37;;;:69;;;;;:::i;:::-;4385:17;;4275:95;;-1:-1:-1;4385:21:37;4381:179;;4482:10;4471:30;;;;;;;;;;;;:::i;:::-;4463:85;;;;-1:-1:-1;;;4463:85:37;;21838:2:120;4463:85:37;;;21820:21:120;21877:2;21857:18;;;21850:30;21916:34;21896:18;;;21889:62;-1:-1:-1;;;21967:18:120;;;21960:40;22017:19;;4463:85:37;21636:406:120;3967:229:44;4104:12;4136:52;4158:6;4166:4;4172:1;4175:12;4104;5375;5389:23;5416:6;-1:-1:-1;;;;;5416:11:44;5435:5;5442:4;5416:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5374:73;;;;5465:69;5492:6;5500:7;5509:10;5521:12;5465:26;:69::i;:::-;5458:76;5087:455;-1:-1:-1;;;;;;;5087:455:44:o;7660:644::-;7845:12;7874:7;7870:427;;;7902:10;:17;7923:1;7902:22;7898:290;;-1:-1:-1;;;;;1505:19:44;;;8112:60;;;;-1:-1:-1;;;8112:60:44;;23203:2:120;8112:60:44;;;23185:21:120;23242:2;23222:18;;;23215:30;23281:31;23261:18;;;23254:59;23330:18;;8112:60:44;23001:353:120;8112:60:44;-1:-1:-1;8209:10:44;8202:17;;7870:427;8252:33;8260:10;8272:12;9007:17;;:21;9003:388;;9239:10;9233:17;9296:15;9283:10;9279:2;9275:19;9268:44;9003:388;9366:12;9359:20;;-1:-1:-1;;;9359:20:44;;;;;;;;:::i;14:286:120:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:120;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:120:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:120;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:347::-;726:8;736:6;790:3;783:4;775:6;771:17;767:27;757:55;;808:1;805;798:12;757:55;-1:-1:-1;831:20:120;;-1:-1:-1;;;;;863:30:120;;860:50;;;906:1;903;896:12;860:50;943:4;935:6;931:17;919:29;;995:3;988:4;979:6;971;967:19;963:30;960:39;957:59;;;1012:1;1009;1002:12;957:59;675:347;;;;;:::o;1027:551::-;1115:6;1123;1131;1139;1192:2;1180:9;1171:7;1167:23;1163:32;1160:52;;;1208:1;1205;1198:12;1160:52;1231:29;1250:9;1231:29;:::i;:::-;1221:39;;1307:2;1296:9;1292:18;1279:32;1269:42;;1362:2;1351:9;1347:18;1334:32;-1:-1:-1;;;;;1381:6:120;1378:30;1375:50;;;1421:1;1418;1411:12;1375:50;1460:58;1510:7;1501:6;1490:9;1486:22;1460:58;:::i;:::-;1027:551;;;;-1:-1:-1;1537:8:120;-1:-1:-1;;;;1027:551:120:o;1583:127::-;1644:10;1639:3;1635:20;1632:1;1625:31;1675:4;1672:1;1665:15;1699:4;1696:1;1689:15;1715:275;1786:2;1780:9;1851:2;1832:13;;-1:-1:-1;;1828:27:120;1816:40;;-1:-1:-1;;;;;1871:34:120;;1907:22;;;1868:62;1865:88;;;1933:18;;:::i;:::-;1969:2;1962:22;1715:275;;-1:-1:-1;1715:275:120:o;1995:530::-;2037:5;2090:3;2083:4;2075:6;2071:17;2067:27;2057:55;;2108:1;2105;2098:12;2057:55;2144:6;2131:20;-1:-1:-1;;;;;2166:2:120;2163:26;2160:52;;;2192:18;;:::i;:::-;2236:55;2279:2;2260:13;;-1:-1:-1;;2256:27:120;2285:4;2252:38;2236:55;:::i;:::-;2316:2;2307:7;2300:19;2362:3;2355:4;2350:2;2342:6;2338:15;2334:26;2331:35;2328:55;;;2379:1;2376;2369:12;2328:55;2444:2;2437:4;2429:6;2425:17;2418:4;2409:7;2405:18;2392:55;2492:1;2467:16;;;2485:4;2463:27;2456:38;;;;2471:7;1995:530;-1:-1:-1;;;1995:530:120:o;2530:537::-;2625:6;2633;2641;2649;2702:3;2690:9;2681:7;2677:23;2673:33;2670:53;;;2719:1;2716;2709:12;2670:53;2742:29;2761:9;2742:29;:::i;:::-;2732:39;;2790:38;2824:2;2813:9;2809:18;2790:38;:::i;:::-;2780:48;;2875:2;2864:9;2860:18;2847:32;2837:42;;2930:2;2919:9;2915:18;2902:32;-1:-1:-1;;;;;2949:6:120;2946:30;2943:50;;;2989:1;2986;2979:12;2943:50;3012:49;3053:7;3044:6;3033:9;3029:22;3012:49;:::i;:::-;3002:59;;;2530:537;;;;;;;:::o;3279:367::-;3342:8;3352:6;3406:3;3399:4;3391:6;3387:17;3383:27;3373:55;;3424:1;3421;3414:12;3373:55;-1:-1:-1;3447:20:120;;-1:-1:-1;;;;;3479:30:120;;3476:50;;;3522:1;3519;3512:12;3476:50;3559:4;3551:6;3547:17;3535:29;;3619:3;3612:4;3602:6;3599:1;3595:14;3587:6;3583:27;3579:38;3576:47;3573:67;;;3636:1;3633;3626:12;3651:1099;3820:6;3828;3836;3844;3852;3860;3913:2;3901:9;3892:7;3888:23;3884:32;3881:52;;;3929:1;3926;3919:12;3881:52;3969:9;3956:23;-1:-1:-1;;;;;4039:2:120;4031:6;4028:14;4025:34;;;4055:1;4052;4045:12;4025:34;4094:70;4156:7;4147:6;4136:9;4132:22;4094:70;:::i;:::-;4183:8;;-1:-1:-1;4068:96:120;-1:-1:-1;4271:2:120;4256:18;;4243:32;;-1:-1:-1;4287:16:120;;;4284:36;;;4316:1;4313;4306:12;4284:36;4355:72;4419:7;4408:8;4397:9;4393:24;4355:72;:::i;:::-;4446:8;;-1:-1:-1;4329:98:120;-1:-1:-1;4534:2:120;4519:18;;4506:32;;-1:-1:-1;4550:16:120;;;4547:36;;;4579:1;4576;4569:12;4547:36;;4618:72;4682:7;4671:8;4660:9;4656:24;4618:72;:::i;:::-;3651:1099;;;;-1:-1:-1;3651:1099:120;;-1:-1:-1;3651:1099:120;;4709:8;;3651:1099;-1:-1:-1;;;3651:1099:120:o;5159:180::-;5218:6;5271:2;5259:9;5250:7;5246:23;5242:32;5239:52;;;5287:1;5284;5277:12;5239:52;-1:-1:-1;5310:23:120;;5159:180;-1:-1:-1;5159:180:120:o;5344:1135::-;5495:6;5503;5511;5519;5527;5535;5543;5596:3;5584:9;5575:7;5571:23;5567:33;5564:53;;;5613:1;5610;5603:12;5564:53;5636:29;5655:9;5636:29;:::i;:::-;5626:39;;5716:2;5705:9;5701:18;5688:32;-1:-1:-1;;;;;5780:2:120;5772:6;5769:14;5766:34;;;5796:1;5793;5786:12;5766:34;5835:70;5897:7;5888:6;5877:9;5873:22;5835:70;:::i;:::-;5924:8;;-1:-1:-1;5809:96:120;-1:-1:-1;6012:2:120;5997:18;;5984:32;;-1:-1:-1;6028:16:120;;;6025:36;;;6057:1;6054;6047:12;6025:36;6096:72;6160:7;6149:8;6138:9;6134:24;6096:72;:::i;:::-;6187:8;;-1:-1:-1;6070:98:120;-1:-1:-1;6275:2:120;6260:18;;6247:32;;-1:-1:-1;6291:16:120;;;6288:36;;;6320:1;6317;6310:12;6288:36;;6359:60;6411:7;6400:8;6389:9;6385:24;6359:60;:::i;:::-;5344:1135;;;;-1:-1:-1;5344:1135:120;;-1:-1:-1;5344:1135:120;;;;6333:86;;-1:-1:-1;;;5344:1135:120:o;6666:186::-;6725:6;6778:2;6766:9;6757:7;6753:23;6749:32;6746:52;;;6794:1;6791;6784:12;6746:52;6817:29;6836:9;6817:29;:::i;6857:437::-;6943:6;6951;7004:2;6992:9;6983:7;6979:23;6975:32;6972:52;;;7020:1;7017;7010:12;6972:52;7060:9;7047:23;-1:-1:-1;;;;;7085:6:120;7082:30;7079:50;;;7125:1;7122;7115:12;7079:50;7164:70;7226:7;7217:6;7206:9;7202:22;7164:70;:::i;:::-;7253:8;;7138:96;;-1:-1:-1;6857:437:120;-1:-1:-1;;;;6857:437:120:o;7299:254::-;7367:6;7375;7428:2;7416:9;7407:7;7403:23;7399:32;7396:52;;;7444:1;7441;7434:12;7396:52;7467:29;7486:9;7467:29;:::i;:::-;7457:39;7543:2;7528:18;;;;7515:32;;-1:-1:-1;;;7299:254:120:o;7558:712::-;7612:5;7665:3;7658:4;7650:6;7646:17;7642:27;7632:55;;7683:1;7680;7673:12;7632:55;7719:6;7706:20;7745:4;-1:-1:-1;;;;;7764:2:120;7761:26;7758:52;;;7790:18;;:::i;:::-;7836:2;7833:1;7829:10;7859:28;7883:2;7879;7875:11;7859:28;:::i;:::-;7921:15;;;7991;;;7987:24;;;7952:12;;;;8023:15;;;8020:35;;;8051:1;8048;8041:12;8020:35;8087:2;8079:6;8075:15;8064:26;;8099:142;8115:6;8110:3;8107:15;8099:142;;;8181:17;;8169:30;;8132:12;;;;8219;;;;8099:142;;8275:943;8429:6;8437;8445;8453;8461;8514:3;8502:9;8493:7;8489:23;8485:33;8482:53;;;8531:1;8528;8521:12;8482:53;8554:29;8573:9;8554:29;:::i;:::-;8544:39;;8602:38;8636:2;8625:9;8621:18;8602:38;:::i;:::-;8592:48;;8691:2;8680:9;8676:18;8663:32;-1:-1:-1;;;;;8755:2:120;8747:6;8744:14;8741:34;;;8771:1;8768;8761:12;8741:34;8794:61;8847:7;8838:6;8827:9;8823:22;8794:61;:::i;:::-;8784:71;;8908:2;8897:9;8893:18;8880:32;8864:48;;8937:2;8927:8;8924:16;8921:36;;;8953:1;8950;8943:12;8921:36;8976:63;9031:7;9020:8;9009:9;9005:24;8976:63;:::i;:::-;8966:73;;9092:3;9081:9;9077:19;9064:33;9048:49;;9122:2;9112:8;9109:16;9106:36;;;9138:1;9135;9128:12;9106:36;;9161:51;9204:7;9193:8;9182:9;9178:24;9161:51;:::i;:::-;9151:61;;;8275:943;;;;;;;;:::o;9223:773::-;9345:6;9353;9361;9369;9422:2;9410:9;9401:7;9397:23;9393:32;9390:52;;;9438:1;9435;9428:12;9390:52;9478:9;9465:23;-1:-1:-1;;;;;9548:2:120;9540:6;9537:14;9534:34;;;9564:1;9561;9554:12;9534:34;9603:70;9665:7;9656:6;9645:9;9641:22;9603:70;:::i;:::-;9692:8;;-1:-1:-1;9577:96:120;-1:-1:-1;9780:2:120;9765:18;;9752:32;;-1:-1:-1;9796:16:120;;;9793:36;;;9825:1;9822;9815:12;9793:36;;9864:72;9928:7;9917:8;9906:9;9902:24;9864:72;:::i;10190:606::-;10294:6;10302;10310;10318;10326;10379:3;10367:9;10358:7;10354:23;10350:33;10347:53;;;10396:1;10393;10386:12;10347:53;10419:29;10438:9;10419:29;:::i;:::-;10409:39;;10467:38;10501:2;10490:9;10486:18;10467:38;:::i;:::-;10457:48;;10552:2;10541:9;10537:18;10524:32;10514:42;;10603:2;10592:9;10588:18;10575:32;10565:42;;10658:3;10647:9;10643:19;10630:33;-1:-1:-1;;;;;10678:6:120;10675:30;10672:50;;;10718:1;10715;10708:12;10672:50;10741:49;10782:7;10773:6;10762:9;10758:22;10741:49;:::i;11222:266::-;11310:6;11305:3;11298:19;11362:6;11355:5;11348:4;11343:3;11339:14;11326:43;-1:-1:-1;11414:1:120;11389:16;;;11407:4;11385:27;;;11378:38;;;;11470:2;11449:15;;;-1:-1:-1;;11445:29:120;11436:39;;;11432:50;;11222:266::o;11493:515::-;-1:-1:-1;;;;;11772:15:120;;;11754:34;;11824:15;;11819:2;11804:18;;11797:43;11871:2;11856:18;;11849:34;;;11919:3;11914:2;11899:18;;11892:31;;;11697:4;;11940:62;;11982:19;;11974:6;11966;11940:62;:::i;12444:127::-;12505:10;12500:3;12496:20;12493:1;12486:31;12536:4;12533:1;12526:15;12560:4;12557:1;12550:15;12576:521;12653:4;12659:6;12719:11;12706:25;12813:2;12809:7;12798:8;12782:14;12778:29;12774:43;12754:18;12750:68;12740:96;;12832:1;12829;12822:12;12740:96;12859:33;;12911:20;;;-1:-1:-1;;;;;;12943:30:120;;12940:50;;;12986:1;12983;12976:12;12940:50;13019:4;13007:17;;-1:-1:-1;13050:14:120;13046:27;;;13036:38;;13033:58;;;13087:1;13084;13077:12;13102:232;13141:3;13162:17;;;13159:140;;13221:10;13216:3;13212:20;13209:1;13202:31;13256:4;13253:1;13246:15;13284:4;13281:1;13274:15;13159:140;-1:-1:-1;13326:1:120;13315:13;;13102:232::o;15409:401::-;15611:2;15593:21;;;15650:2;15630:18;;;15623:30;15689:34;15684:2;15669:18;;15662:62;-1:-1:-1;;;15755:2:120;15740:18;;15733:35;15800:3;15785:19;;15409:401::o;16712:184::-;16782:6;16835:2;16823:9;16814:7;16810:23;16806:32;16803:52;;;16851:1;16848;16841:12;16803:52;-1:-1:-1;16874:16:120;;16712:184;-1:-1:-1;16712:184:120:o;21354:277::-;21421:6;21474:2;21462:9;21453:7;21449:23;21445:32;21442:52;;;21490:1;21487;21480:12;21442:52;21522:9;21516:16;21575:5;21568:13;21561:21;21554:5;21551:32;21541:60;;21597:1;21594;21587:12;22454:250;22539:1;22549:113;22563:6;22560:1;22557:13;22549:113;;;22639:11;;;22633:18;22620:11;;;22613:39;22585:2;22578:10;22549:113;;;-1:-1:-1;;22696:1:120;22678:16;;22671:27;22454:250::o;22709:287::-;22838:3;22876:6;22870:13;22892:66;22951:6;22946:3;22939:4;22931:6;22927:17;22892:66;:::i;:::-;22974:16;;;;;22709:287;-1:-1:-1;;22709:287:120:o;23359:396::-;23508:2;23497:9;23490:21;23471:4;23540:6;23534:13;23583:6;23578:2;23567:9;23563:18;23556:34;23599:79;23671:6;23666:2;23655:9;23651:18;23646:2;23638:6;23634:15;23599:79;:::i;:::-;23739:2;23718:15;-1:-1:-1;;23714:29:120;23699:45;;;;23746:2;23695:54;;23359:396;-1:-1:-1;;23359:396:120:o",
    "linkReferences": {},
    "immutableReferences": {
      "59254": [
        {
          "start": 1244,
          "length": 32
        }
      ],
      "59682": [
        {
          "start": 1116,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BASE_TOKEN()": "210663e4",
    "CRV()": "945c9142",
    "CVX()": "759cb53b",
    "CVX_Deposit_Address()": "4d65dd1c",
    "CVX_Reward_Address()": "eada4cd7",
    "GBL()": "3ce8d432",
    "MP_UNDERLYING_LP_POOL()": "5e860430",
    "MP_UNDERLYING_LP_TOKEN()": "5edb2ba4",
    "POOL_LP_TOKEN()": "b2c500f0",
    "PP_TOKENS(uint256)": "d0991c84",
    "baseline()": "ab2637af",
    "canPull()": "215cccdd",
    "canPullERC1155()": "b0607cf8",
    "canPullERC721()": "3c117244",
    "canPullMulti()": "3eda81ad",
    "canPullMultiERC721()": "1852b383",
    "canPullMultiPartial()": "2f08d48b",
    "canPullPartial()": "64c77735",
    "canPush()": "e7f44629",
    "canPushERC1155()": "cf10b7ab",
    "canPushERC721()": "8b648ee2",
    "canPushMulti()": "a4a3e79d",
    "canPushMultiERC721()": "dd913bdb",
    "chainlinkPriceFeeds(uint256)": "2dd3d9ef",
    "convexPoolID()": "49a5e73b",
    "extraRewards()": "e21c81d3",
    "indexBASE_TOKEN()": "1af1ca97",
    "investTimeLock()": "aeb3264b",
    "locked()": "cf309012",
    "metaOrPlainPool()": "dbbc65d9",
    "nextYieldDistribution()": "f988dc3f",
    "numberOfTokensUnderlyingLPPool()": "da456cbd",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "pool()": "16f0115b",
    "pullFromLocker(address)": "7dbcdbc1",
    "pullFromLockerERC1155(address,uint256[],uint256[],bytes)": "422b2018",
    "pullFromLockerERC721(address,uint256,bytes)": "12052176",
    "pullFromLockerMulti(address[])": "607cd649",
    "pullFromLockerMultiERC721(address[],uint256[],bytes[])": "15e98744",
    "pullFromLockerMultiPartial(address[],uint256[])": "ff0459ba",
    "pullFromLockerPartial(address,uint256)": "d9821e3b",
    "pushToLocker(address,uint256)": "84476591",
    "pushToLockerERC1155(address,uint256[],uint256[],bytes)": "fd76f59d",
    "pushToLockerERC721(address,uint256,bytes)": "1d9389e9",
    "pushToLockerMulti(address[],uint256[])": "c9c6a414",
    "pushToLockerMultiERC721(address[],uint256[],bytes[])": "b892bcc0",
    "renounceOwnership()": "715018a6",
    "rewardsAddresses(uint256)": "a0c9455a",
    "router1INCH_V4()": "19ce95f4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "toForwardCRV()": "f5a04785",
    "toForwardCVX()": "f85fcb1a",
    "toForwardExtraRewards(uint256)": "be8d8061",
    "toForwardTokensBaseline(uint256)": "da87d2cf",
    "transferOwnership(address)": "f2fde38b",
    "transferOwnershipAndLock(address)": "58289c7e",
    "yieldOwedToYDL()": "b3da6b08"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_ZivoeAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_boolMetaOrPlainAndRewards\",\"type\":\"bool[]\"},{\"internalType\":\"address\",\"name\":\"_curvePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_CVX_Deposit_Address\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_rewardsAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_BASE_TOKEN_MP\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_MP_UNDERLYING_LP_POOL\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_numberOfTokensUnderlyingLPPool\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_numberOfTokensPP\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_convexPoolID\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_chainlinkPriceFeeds\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferredAndLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"pools\",\"type\":\"bytes32[]\"}],\"name\":\"SwapExecuted_2e95b6c8\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLeft\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetToSwap\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"srcReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dstReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ZivoeSwapper.SwapDescription\",\"name\":\"info\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SwapExecuted_7c025200\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted_b0431182\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualMakingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualTakingAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"makerAsset\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"takerAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allowedSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ZivoeSwapper.OrderRFQ\",\"name\":\"order\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted_d0a3b665\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"pools\",\"type\":\"uint256[]\"}],\"name\":\"SwapExecuted_e449022e\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CVX\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CVX_Deposit_Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CVX_Reward_Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GBL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MP_UNDERLYING_LP_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MP_UNDERLYING_LP_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_LP_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PP_TOKENS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPull\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPullERC1155\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPullERC721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPullMulti\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPullMultiERC721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPullMultiPartial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPullPartial\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPush\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPushERC1155\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPushERC721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPushMulti\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPushMultiERC721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"chainlinkPriceFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extraRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexBASE_TOKEN\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investTimeLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metaOrPlainPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextYieldDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfTokensUnderlyingLPPool\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"pullFromLocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pullFromLockerERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pullFromLockerERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"pullFromLockerMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"pullFromLockerMultiERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"pullFromLockerMultiPartial\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pullFromLockerPartial\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pushToLocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pushToLockerERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pushToLockerERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"pushToLockerMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"pushToLockerMultiERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardsAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router1INCH_V4\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toForwardCRV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toForwardCVX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"toForwardExtraRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"toForwardTokensBaseline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipAndLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldOwedToYDL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract aims at deploying lockers that will invest in Convex pools.          Plain pools should contain only stablecoins denominated in same currency (all tokens in USD or all tokens in EUR for example, otherwise USD_Convertible won't be correct).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_BASE_TOKEN_MP\":\"if metapool should specify the address of the base token of the pool. If plain pool, set to the zero address.\",\"_CVX_Deposit_Address\":\"address of the convex Booster contract.\",\"_MP_UNDERLYING_LP_POOL\":\"if metapool specify address of the underlying LP token's pool (3CRV for example).\",\"_ZivoeAddresses\":\"_ZivoeAddresses[0] = The administrator of this contract (intended to be ZivoeDAO) and _ZivoeAddresses[1] = GBL (the ZivoeGlobals contract).\",\"_boolMetaOrPlainAndRewards\":\"_boolMetaOrPlainAndRewards[0] => If true: metapool, if false: plain pool. _boolMetaOrPlainAndRewards[1] => if true: extra rewards distributed on top of CRV or CVX.\",\"_chainlinkPriceFeeds\":\"array containing the addresses of the chainlink price feeds, should be provided in correct order (refer to coins index in Curve pool)\",\"_convexPoolID\":\"Indicate the ID of the Convex pool where the LP token should be staked.\",\"_curvePool\":\"address of the Curve Pool.\",\"_numberOfTokensPP\":\"If pool is a metapool, set to 0. If plain pool, specify the number of coins in the pool.\",\"_numberOfTokensUnderlyingLPPool\":\"if metapool: specify the number of tokens in the underlying LP pool (for 3CRV pool set to 3). If plain pool: set to 0.\",\"_rewardsAddresses\":\"addresses of the extra rewards. If _extraRewards = false set as an array of the zero address.\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pullFromLocker(address)\":{\"params\":{\"asset\":\"The asset to migrate.\"}},\"pullFromLockerERC1155(address,uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"The amounts to migrate.\",\"asset\":\"The ERC1155 contract.\",\"data\":\"Accompanying transaction data.\",\"ids\":\"The IDs of the assets within the ERC1155 to migrate.\"}},\"pullFromLockerERC721(address,uint256,bytes)\":{\"params\":{\"asset\":\"The NFT contract.\",\"data\":\"Accompanying transaction data.\",\"tokenId\":\"The ID of the NFT to migrate.\"}},\"pullFromLockerMulti(address[])\":{\"params\":{\"assets\":\"The assets to migrate.\"}},\"pullFromLockerMultiERC721(address[],uint256[],bytes[])\":{\"params\":{\"assets\":\"The NFT contracts.\",\"data\":\"Accompanying transaction data.\",\"tokenIds\":\"The IDs of the NFTs to migrate.\"}},\"pullFromLockerMultiPartial(address[],uint256[])\":{\"params\":{\"amounts\":\"The amounts of \\\"assets\\\" to migrate, corresponds to \\\"assets\\\" by position in array.\",\"assets\":\"The assets to migrate.\"}},\"pullFromLockerPartial(address,uint256)\":{\"params\":{\"amount\":\"The amount of \\\"asset\\\" to migrate.\",\"asset\":\"The asset to migrate.\"}},\"pushToLocker(address,uint256)\":{\"params\":{\"amount\":\"The amount of \\\"asset\\\" to migrate.\",\"asset\":\"The asset to migrate.\"}},\"pushToLockerERC1155(address,uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"The amounts to migrate.\",\"asset\":\"The ERC1155 contract.\",\"data\":\"Accompanying transaction data.\",\"ids\":\"The IDs of the assets within the ERC1155 to migrate.\"}},\"pushToLockerERC721(address,uint256,bytes)\":{\"params\":{\"asset\":\"The NFT contract.\",\"data\":\"Accompanying transaction data.\",\"tokenId\":\"The ID of the NFT to migrate.\"}},\"pushToLockerMulti(address[],uint256[])\":{\"params\":{\"amounts\":\"The amounts of \\\"assets\\\" to migrate, corresponds to \\\"assets\\\" by position in array.\",\"assets\":\"The assets to migrate.\"}},\"pushToLockerMultiERC721(address[],uint256[],bytes[])\":{\"params\":{\"assets\":\"The NFT contracts.\",\"data\":\"Accompanying transaction data.\",\"tokenIds\":\"The IDs of the NFTs to migrate.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipAndLock(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"BASE_TOKEN\":{\"details\":\"Metapool parameters:\"},\"CVX\":{\"details\":\"Reward addresses. TODO: could optimize with including CVX and CRV in \\\"rewardsAddresses\\\", to check.\"},\"CVX_Deposit_Address\":{\"details\":\"Convex addresses.\"},\"PP_TOKENS\":{\"details\":\"Plain Pool parameters:\"},\"baseline\":{\"details\":\"If true, extra rewards are distributed on top of CRV and CVX. If false, no extra rewards.\"},\"chainlinkPriceFeeds\":{\"details\":\"chainlink price feeds:\"},\"convexPoolID\":{\"details\":\"Convex staking pool ID.\"},\"extraRewards\":{\"details\":\"If true = metapool, if false = plain pool.\"},\"investTimeLock\":{\"details\":\"Determines next available forwardYield() call. \"},\"metaOrPlainPool\":{\"details\":\"defines a period for keepers to invest before public accessible function.\"},\"nextYieldDistribution\":{\"details\":\"The ZivoeGlobals contract.\"},\"pool\":{\"details\":\"Curve addresses:\"},\"toForwardCRV\":{\"details\":\"Part of LP token increase over baseline that is owed to the YDL (needed for accounting when pulling or investing capital).\"},\"toForwardCVX\":{\"details\":\"CRV tokens harvested that need to be transfered by ZVL to the YDL.\"},\"toForwardExtraRewards\":{\"details\":\"CVX tokens harvested that need to be transfered by ZVL to the YDL.\"},\"toForwardTokensBaseline\":{\"details\":\"Extra rewards harvested that need to be transfered by ZVL to the YDL.\"},\"yieldOwedToYDL\":{\"details\":\"USD convertible, used for forwardYield() accounting.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canPull()\":{\"notice\":\"Permission for calling pullFromLocker().\"},\"canPullERC1155()\":{\"notice\":\"Permission for calling pullFromLockerERC1155().\"},\"canPullERC721()\":{\"notice\":\"Permission for calling pullFromLockerERC721().\"},\"canPullMulti()\":{\"notice\":\"Permission for calling pullFromLockerMulti().\"},\"canPullMultiERC721()\":{\"notice\":\"Permission for calling pullFromLockerMultiERC721().\"},\"canPullMultiPartial()\":{\"notice\":\"Permission for calling pullFromLockerMultiPartial().\"},\"canPullPartial()\":{\"notice\":\"Permission for calling pullFromLockerPartial().\"},\"canPush()\":{\"notice\":\"Permission for calling pushToLocker().\"},\"canPushERC1155()\":{\"notice\":\"Permission for calling pushToLockerERC1155().\"},\"canPushERC721()\":{\"notice\":\"Permission for calling pushToLockerERC721().\"},\"canPushMulti()\":{\"notice\":\"Permission for calling pushToLockerMulti().\"},\"canPushMultiERC721()\":{\"notice\":\"Permission for calling pushToLockerMultiERC721().\"},\"constructor\":{\"notice\":\"Initializes the e_OCY_CVX_Modular.sol contract.\"},\"pullFromLocker(address)\":{\"notice\":\"Migrates entire ERC20 balance from locker to owner().\"},\"pullFromLockerERC1155(address,uint256[],uint256[],bytes)\":{\"notice\":\"Migrates ERC1155 assets from locker to owner().\"},\"pullFromLockerERC721(address,uint256,bytes)\":{\"notice\":\"Migrates an ERC721 from locker to owner().\"},\"pullFromLockerMulti(address[])\":{\"notice\":\"Migrates full amount of ERC20s from locker to owner().\"},\"pullFromLockerMultiERC721(address[],uint256[],bytes[])\":{\"notice\":\"Migrates ERC721s from locker to owner().\"},\"pullFromLockerMultiPartial(address[],uint256[])\":{\"notice\":\"Migrates specific amounts of ERC20s from locker to owner().\"},\"pullFromLockerPartial(address,uint256)\":{\"notice\":\"Migrates specific amount of ERC20 from locker to owner().\"},\"pushToLocker(address,uint256)\":{\"notice\":\"Migrates specific amount of ERC20 from owner() to locker.\"},\"pushToLockerERC1155(address,uint256[],uint256[],bytes)\":{\"notice\":\"Migrates ERC1155 assets from owner() to locker.\"},\"pushToLockerERC721(address,uint256,bytes)\":{\"notice\":\"Migrates an ERC721 from owner() to locker.\"},\"pushToLockerMulti(address[],uint256[])\":{\"notice\":\"Migrates specific amounts of ERC20s from owner() to locker.\"},\"pushToLockerMultiERC721(address[],uint256[],bytes[])\":{\"notice\":\"Migrates ERC721s from owner() to locker.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/zivoe-core-foundry/src/lockers/OCY/production/OCY_CVX_Modular.sol\":\"OCY_CVX_Modular\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":zivoe-core-foundry/=lib/zivoe-core-foundry/src/\"]},\"sources\":{\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x93c3ecba425886b8933e548ed3adbfc56e40ff66f5c60532458fb06ba81598e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62c825197992648dca38edb1db345c0b5fd9e68f7eca893101f45b9cae25acfd\",\"dweb:/ipfs/QmdzBQtYLpjnVd17qUC3b7YXAGyoRFqKGQKjCJXPumxGss\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xf735581e2728965940c9dd60ba73d199e39a2ee9a1ed62e5cab4cbf0ccb5815d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6833b21890a26a47719277e9afab26788ffb48f2e4faeb6099d0b2a7c92d4165\",\"dweb:/ipfs/QmYEcKDStaqD1t9maNr3VrfBekVGHGU8Zw1RGMDjoHY5aN\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x5576eca134a9c67ca351f0b4e7d6b821ae694ff13708ee449420b7c2d746818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a851368585b7849c729c3d39ce85253f8a12601c6640fd2e9480cbbf9bb1601\",\"dweb:/ipfs/Qma4Y3TwioVsCk4ZFivEvoYgcG2v2m3CnKomRVPVDYBv2B\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x86bd9e04dbee51fb3a9370279a0177e9da874a858dfb2c25a405171aa5ae2030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b1f9a3add1a5670683e8477cd4a3aece458f60872e57c0e005282891c1ae03f\",\"dweb:/ipfs/QmYzjghJuXKk9bPTMDcNhoM574w41iXqWLvNKctRwUdN1R\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xbef7444288286c761fd8c0a5137a3f358625bed0fc2e1225a8a3635d47e6982a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2e5a1fb9f86c3f66af291153956d166359d979e6757a8e60b1245123f46216\",\"dweb:/ipfs/QmVM75Qo5SAyXf1thgKnDZ4zkaTVFc3QFdsnK89PEvriDu\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xc97c28f24caed758d150587f1e57753705c2439f314ac47947739869c4413819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2319c1a8e34937da319c0a443a3fa9567994a9fc327be7186c7738573bcfa2f\",\"dweb:/ipfs/QmTSesyJCFLrjSJm5FoVLR1kXM26CnxVy1Ti9HHx31ZyJ2\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xbdd87f6e7336e1054c8eea83e4c9bf98522db7f67a2b900115cd47430945fdb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6eaa4c0f0658d71c3c67a2fd9318fd6aa880a7ebbd1e7d35b98f9a2bb0fb6e5\",\"dweb:/ipfs/QmcwPyp48VgDTrMZk8sbutr3HyviPr9u2uDb6NDGo8e4dK\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xcfa79cbb4867877ee537a899bf75d42b712dac8519ef438939ce36073532454d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7881116d22618a7b940d002cf03bdcf385f7c564db0293f4f847a7368788e2\",\"dweb:/ipfs/QmXL61H7ahe5Buh9xNGqgmLR4tDYoPpYw3Y5ppRbbLkFqk\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"lib/zivoe-core-foundry/src/ZivoeLocker.sol\":{\"keccak256\":\"0xd170fee3066f8a02c12f07d60258e01cc2b3b7872ec3da7a16f49c1521226856\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b42b4b08c446b44a98301e9e5fec03ebb2dd9d60ecb417f81995ddeaacdb8807\",\"dweb:/ipfs/QmYMVGfKMbzkHDs27iEUtoh4ZhZqY1tiC3XLf8AGW3mAmJ\"]},\"lib/zivoe-core-foundry/src/libraries/ZivoeOwnableLocked.sol\":{\"keccak256\":\"0x18c5be5e4caed36b146264afef40e24ef4a3daac4301a338b0a7f366ad04abb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://140c59a6c5d322031e97269c40a7d99da2e7e409487a2c5062c01293522e0a67\",\"dweb:/ipfs/QmdPpdL279GtwxFVhEMuPfpX1q1QWe7ckshJMFwQuXAHaS\"]},\"lib/zivoe-core-foundry/src/lockers/OCY/production/OCY_CVX_Modular.sol\":{\"keccak256\":\"0x49dff80dadb73d3e03f8065ea043b3d1bdbde5a0ddeb860d49f0cb95cb5d20af\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://439d3fe433d6eb130754a88e60b4c389dfd01d3fabdf446ee880bf4f6b68ae29\",\"dweb:/ipfs/QmbufJxLaWwg5RDuyuSGcms81JEhNShmNQm3qn6nRzLr3j\"]},\"lib/zivoe-core-foundry/src/lockers/Utility/ZivoeSwapper.sol\":{\"keccak256\":\"0x2431256faf95fec038df319f7712d5b20461a2c2a24dbee2dc3baa6e2deec94a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5cb410439cc08cdea0fa805da414c53c9c6d2c05c17d8e8b54475506188d7ece\",\"dweb:/ipfs/QmVsJ9odjbLKr9atg7qyD6RfNKK7dQpjoXGm3UgPdjia4c\"]},\"lib/zivoe-core-foundry/src/misc/InterfacesAggregated.sol\":{\"keccak256\":\"0xd0dbeb0f9dfcfde823e2b3d5a6d91d3cf375f7f0fd95482b38e05566d8990c7c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f64ea0cba427a6505d468f2e34818438875d00d2e27d402febd8ec063d4dd1f9\",\"dweb:/ipfs/QmfGxGCdt99HgPpgxr9P4AMpouXvt2YPqxTnXgjMrEcMnF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_ZivoeAddresses",
              "type": "address[]"
            },
            {
              "internalType": "bool[]",
              "name": "_boolMetaOrPlainAndRewards",
              "type": "bool[]"
            },
            {
              "internalType": "address",
              "name": "_curvePool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_CVX_Deposit_Address",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_rewardsAddresses",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_BASE_TOKEN_MP",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_MP_UNDERLYING_LP_POOL",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "_numberOfTokensUnderlyingLPPool",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "_numberOfTokensPP",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_convexPoolID",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_chainlinkPriceFeeds",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferredAndLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "returnAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "srcToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minReturn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "pools",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapExecuted_2e95b6c8",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "returnAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "spentAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasLeft",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "assetToSwap",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct ZivoeSwapper.SwapDescription",
              "name": "info",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "srcToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "dstToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "srcReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dstReceiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minReturnAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flags",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "permit",
                  "type": "bytes"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapExecuted_7c025200",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "returnAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "srcToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "dstToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minReturn",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapExecuted_b0431182",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "actualMakingAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "actualTakingAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct ZivoeSwapper.OrderRFQ",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "info",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "makerAsset",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "takerAsset",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "allowedSender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "makingAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takingAmount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "makingAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takingAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapExecuted_d0a3b665",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "returnAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minReturn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "pools",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapExecuted_e449022e",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE_TOKEN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CRV",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CVX",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CVX_Deposit_Address",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CVX_Reward_Address",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GBL",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MP_UNDERLYING_LP_POOL",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MP_UNDERLYING_LP_TOKEN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POOL_LP_TOKEN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "PP_TOKENS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPull",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPullERC1155",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPullERC721",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "canPullMulti",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPullMultiERC721",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPullMultiPartial",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "canPullPartial",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPush",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPushERC1155",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPushERC721",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "canPushMulti",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canPushMultiERC721",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "chainlinkPriceFeeds",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexPoolID",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "extraRewards",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexBASE_TOKEN",
          "outputs": [
            {
              "internalType": "int128",
              "name": "",
              "type": "int128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investTimeLock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "metaOrPlainPool",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextYieldDistribution",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numberOfTokensUnderlyingLPPool",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullFromLocker"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullFromLockerERC1155"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullFromLockerERC721"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullFromLockerMulti"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullFromLockerMultiERC721"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullFromLockerMultiPartial"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullFromLockerPartial"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushToLocker"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushToLockerERC1155"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushToLockerERC721"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushToLockerMulti"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushToLockerMultiERC721"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardsAddresses",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router1INCH_V4",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "toForwardCRV",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "toForwardCVX",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toForwardExtraRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "toForwardTokensBaseline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnershipAndLock"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "yieldOwedToYDL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_BASE_TOKEN_MP": "if metapool should specify the address of the base token of the pool. If plain pool, set to the zero address.",
              "_CVX_Deposit_Address": "address of the convex Booster contract.",
              "_MP_UNDERLYING_LP_POOL": "if metapool specify address of the underlying LP token's pool (3CRV for example).",
              "_ZivoeAddresses": "_ZivoeAddresses[0] = The administrator of this contract (intended to be ZivoeDAO) and _ZivoeAddresses[1] = GBL (the ZivoeGlobals contract).",
              "_boolMetaOrPlainAndRewards": "_boolMetaOrPlainAndRewards[0] => If true: metapool, if false: plain pool. _boolMetaOrPlainAndRewards[1] => if true: extra rewards distributed on top of CRV or CVX.",
              "_chainlinkPriceFeeds": "array containing the addresses of the chainlink price feeds, should be provided in correct order (refer to coins index in Curve pool)",
              "_convexPoolID": "Indicate the ID of the Convex pool where the LP token should be staked.",
              "_curvePool": "address of the Curve Pool.",
              "_numberOfTokensPP": "If pool is a metapool, set to 0. If plain pool, specify the number of coins in the pool.",
              "_numberOfTokensUnderlyingLPPool": "if metapool: specify the number of tokens in the underlying LP pool (for 3CRV pool set to 3). If plain pool: set to 0.",
              "_rewardsAddresses": "addresses of the extra rewards. If _extraRewards = false set as an array of the zero address."
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pullFromLocker(address)": {
            "params": {
              "asset": "The asset to migrate."
            }
          },
          "pullFromLockerERC1155(address,uint256[],uint256[],bytes)": {
            "params": {
              "amounts": "The amounts to migrate.",
              "asset": "The ERC1155 contract.",
              "data": "Accompanying transaction data.",
              "ids": "The IDs of the assets within the ERC1155 to migrate."
            }
          },
          "pullFromLockerERC721(address,uint256,bytes)": {
            "params": {
              "asset": "The NFT contract.",
              "data": "Accompanying transaction data.",
              "tokenId": "The ID of the NFT to migrate."
            }
          },
          "pullFromLockerMulti(address[])": {
            "params": {
              "assets": "The assets to migrate."
            }
          },
          "pullFromLockerMultiERC721(address[],uint256[],bytes[])": {
            "params": {
              "assets": "The NFT contracts.",
              "data": "Accompanying transaction data.",
              "tokenIds": "The IDs of the NFTs to migrate."
            }
          },
          "pullFromLockerMultiPartial(address[],uint256[])": {
            "params": {
              "amounts": "The amounts of \"assets\" to migrate, corresponds to \"assets\" by position in array.",
              "assets": "The assets to migrate."
            }
          },
          "pullFromLockerPartial(address,uint256)": {
            "params": {
              "amount": "The amount of \"asset\" to migrate.",
              "asset": "The asset to migrate."
            }
          },
          "pushToLocker(address,uint256)": {
            "params": {
              "amount": "The amount of \"asset\" to migrate.",
              "asset": "The asset to migrate."
            }
          },
          "pushToLockerERC1155(address,uint256[],uint256[],bytes)": {
            "params": {
              "amounts": "The amounts to migrate.",
              "asset": "The ERC1155 contract.",
              "data": "Accompanying transaction data.",
              "ids": "The IDs of the assets within the ERC1155 to migrate."
            }
          },
          "pushToLockerERC721(address,uint256,bytes)": {
            "params": {
              "asset": "The NFT contract.",
              "data": "Accompanying transaction data.",
              "tokenId": "The ID of the NFT to migrate."
            }
          },
          "pushToLockerMulti(address[],uint256[])": {
            "params": {
              "amounts": "The amounts of \"assets\" to migrate, corresponds to \"assets\" by position in array.",
              "assets": "The assets to migrate."
            }
          },
          "pushToLockerMultiERC721(address[],uint256[],bytes[])": {
            "params": {
              "assets": "The NFT contracts.",
              "data": "Accompanying transaction data.",
              "tokenIds": "The IDs of the NFTs to migrate."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "transferOwnershipAndLock(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "canPull()": {
            "notice": "Permission for calling pullFromLocker()."
          },
          "canPullERC1155()": {
            "notice": "Permission for calling pullFromLockerERC1155()."
          },
          "canPullERC721()": {
            "notice": "Permission for calling pullFromLockerERC721()."
          },
          "canPullMulti()": {
            "notice": "Permission for calling pullFromLockerMulti()."
          },
          "canPullMultiERC721()": {
            "notice": "Permission for calling pullFromLockerMultiERC721()."
          },
          "canPullMultiPartial()": {
            "notice": "Permission for calling pullFromLockerMultiPartial()."
          },
          "canPullPartial()": {
            "notice": "Permission for calling pullFromLockerPartial()."
          },
          "canPush()": {
            "notice": "Permission for calling pushToLocker()."
          },
          "canPushERC1155()": {
            "notice": "Permission for calling pushToLockerERC1155()."
          },
          "canPushERC721()": {
            "notice": "Permission for calling pushToLockerERC721()."
          },
          "canPushMulti()": {
            "notice": "Permission for calling pushToLockerMulti()."
          },
          "canPushMultiERC721()": {
            "notice": "Permission for calling pushToLockerMultiERC721()."
          },
          "constructor": {
            "notice": "Initializes the e_OCY_CVX_Modular.sol contract."
          },
          "pullFromLocker(address)": {
            "notice": "Migrates entire ERC20 balance from locker to owner()."
          },
          "pullFromLockerERC1155(address,uint256[],uint256[],bytes)": {
            "notice": "Migrates ERC1155 assets from locker to owner()."
          },
          "pullFromLockerERC721(address,uint256,bytes)": {
            "notice": "Migrates an ERC721 from locker to owner()."
          },
          "pullFromLockerMulti(address[])": {
            "notice": "Migrates full amount of ERC20s from locker to owner()."
          },
          "pullFromLockerMultiERC721(address[],uint256[],bytes[])": {
            "notice": "Migrates ERC721s from locker to owner()."
          },
          "pullFromLockerMultiPartial(address[],uint256[])": {
            "notice": "Migrates specific amounts of ERC20s from locker to owner()."
          },
          "pullFromLockerPartial(address,uint256)": {
            "notice": "Migrates specific amount of ERC20 from locker to owner()."
          },
          "pushToLocker(address,uint256)": {
            "notice": "Migrates specific amount of ERC20 from owner() to locker."
          },
          "pushToLockerERC1155(address,uint256[],uint256[],bytes)": {
            "notice": "Migrates ERC1155 assets from owner() to locker."
          },
          "pushToLockerERC721(address,uint256,bytes)": {
            "notice": "Migrates an ERC721 from owner() to locker."
          },
          "pushToLockerMulti(address[],uint256[])": {
            "notice": "Migrates specific amounts of ERC20s from owner() to locker."
          },
          "pushToLockerMultiERC721(address[],uint256[],bytes[])": {
            "notice": "Migrates ERC721s from owner() to locker."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":zivoe-core-foundry/=lib/zivoe-core-foundry/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/zivoe-core-foundry/src/lockers/OCY/production/OCY_CVX_Modular.sol": "OCY_CVX_Modular"
      },
      "libraries": {}
    },
    "sources": {
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0x93c3ecba425886b8933e548ed3adbfc56e40ff66f5c60532458fb06ba81598e5",
        "urls": [
          "bzz-raw://62c825197992648dca38edb1db345c0b5fd9e68f7eca893101f45b9cae25acfd",
          "dweb:/ipfs/QmdzBQtYLpjnVd17qUC3b7YXAGyoRFqKGQKjCJXPumxGss"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0xf735581e2728965940c9dd60ba73d199e39a2ee9a1ed62e5cab4cbf0ccb5815d",
        "urls": [
          "bzz-raw://6833b21890a26a47719277e9afab26788ffb48f2e4faeb6099d0b2a7c92d4165",
          "dweb:/ipfs/QmYEcKDStaqD1t9maNr3VrfBekVGHGU8Zw1RGMDjoHY5aN"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x5576eca134a9c67ca351f0b4e7d6b821ae694ff13708ee449420b7c2d746818a",
        "urls": [
          "bzz-raw://6a851368585b7849c729c3d39ce85253f8a12601c6640fd2e9480cbbf9bb1601",
          "dweb:/ipfs/Qma4Y3TwioVsCk4ZFivEvoYgcG2v2m3CnKomRVPVDYBv2B"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x86bd9e04dbee51fb3a9370279a0177e9da874a858dfb2c25a405171aa5ae2030",
        "urls": [
          "bzz-raw://1b1f9a3add1a5670683e8477cd4a3aece458f60872e57c0e005282891c1ae03f",
          "dweb:/ipfs/QmYzjghJuXKk9bPTMDcNhoM574w41iXqWLvNKctRwUdN1R"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xbef7444288286c761fd8c0a5137a3f358625bed0fc2e1225a8a3635d47e6982a",
        "urls": [
          "bzz-raw://0f2e5a1fb9f86c3f66af291153956d166359d979e6757a8e60b1245123f46216",
          "dweb:/ipfs/QmVM75Qo5SAyXf1thgKnDZ4zkaTVFc3QFdsnK89PEvriDu"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xc97c28f24caed758d150587f1e57753705c2439f314ac47947739869c4413819",
        "urls": [
          "bzz-raw://b2319c1a8e34937da319c0a443a3fa9567994a9fc327be7186c7738573bcfa2f",
          "dweb:/ipfs/QmTSesyJCFLrjSJm5FoVLR1kXM26CnxVy1Ti9HHx31ZyJ2"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0xbdd87f6e7336e1054c8eea83e4c9bf98522db7f67a2b900115cd47430945fdb6",
        "urls": [
          "bzz-raw://a6eaa4c0f0658d71c3c67a2fd9318fd6aa880a7ebbd1e7d35b98f9a2bb0fb6e5",
          "dweb:/ipfs/QmcwPyp48VgDTrMZk8sbutr3HyviPr9u2uDb6NDGo8e4dK"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xcfa79cbb4867877ee537a899bf75d42b712dac8519ef438939ce36073532454d",
        "urls": [
          "bzz-raw://0d7881116d22618a7b940d002cf03bdcf385f7c564db0293f4f847a7368788e2",
          "dweb:/ipfs/QmXL61H7ahe5Buh9xNGqgmLR4tDYoPpYw3Y5ppRbbLkFqk"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac",
        "urls": [
          "bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02",
          "dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e",
        "urls": [
          "bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5",
          "dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/src/ZivoeLocker.sol": {
        "keccak256": "0xd170fee3066f8a02c12f07d60258e01cc2b3b7872ec3da7a16f49c1521226856",
        "urls": [
          "bzz-raw://b42b4b08c446b44a98301e9e5fec03ebb2dd9d60ecb417f81995ddeaacdb8807",
          "dweb:/ipfs/QmYMVGfKMbzkHDs27iEUtoh4ZhZqY1tiC3XLf8AGW3mAmJ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/zivoe-core-foundry/src/libraries/ZivoeOwnableLocked.sol": {
        "keccak256": "0x18c5be5e4caed36b146264afef40e24ef4a3daac4301a338b0a7f366ad04abb3",
        "urls": [
          "bzz-raw://140c59a6c5d322031e97269c40a7d99da2e7e409487a2c5062c01293522e0a67",
          "dweb:/ipfs/QmdPpdL279GtwxFVhEMuPfpX1q1QWe7ckshJMFwQuXAHaS"
        ],
        "license": "MIT"
      },
      "lib/zivoe-core-foundry/src/lockers/OCY/production/OCY_CVX_Modular.sol": {
        "keccak256": "0x49dff80dadb73d3e03f8065ea043b3d1bdbde5a0ddeb860d49f0cb95cb5d20af",
        "urls": [
          "bzz-raw://439d3fe433d6eb130754a88e60b4c389dfd01d3fabdf446ee880bf4f6b68ae29",
          "dweb:/ipfs/QmbufJxLaWwg5RDuyuSGcms81JEhNShmNQm3qn6nRzLr3j"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/zivoe-core-foundry/src/lockers/Utility/ZivoeSwapper.sol": {
        "keccak256": "0x2431256faf95fec038df319f7712d5b20461a2c2a24dbee2dc3baa6e2deec94a",
        "urls": [
          "bzz-raw://5cb410439cc08cdea0fa805da414c53c9c6d2c05c17d8e8b54475506188d7ece",
          "dweb:/ipfs/QmVsJ9odjbLKr9atg7qyD6RfNKK7dQpjoXGm3UgPdjia4c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/zivoe-core-foundry/src/misc/InterfacesAggregated.sol": {
        "keccak256": "0xd0dbeb0f9dfcfde823e2b3d5a6d91d3cf375f7f0fd95482b38e05566d8990c7c",
        "urls": [
          "bzz-raw://f64ea0cba427a6505d468f2e34818438875d00d2e27d402febd8ec063d4dd1f9",
          "dweb:/ipfs/QmfGxGCdt99HgPpgxr9P4AMpouXvt2YPqxTnXgjMrEcMnF"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/zivoe-core-foundry/src/lockers/OCY/production/OCY_CVX_Modular.sol",
    "id": 59645,
    "exportedSymbols": {
      "Address": [
        33077
      ],
      "AggregatorV3Interface": [
        61218
      ],
      "Context": [
        34470
      ],
      "ERC1155Holder": [
        30276
      ],
      "ERC1155Receiver": [
        30310
      ],
      "ERC165": [
        35472
      ],
      "ERC721Holder": [
        32747
      ],
      "ICRVMetaPool": [
        61333
      ],
      "ICRVPlainPoolFBP": [
        61467
      ],
      "ICVX_Booster": [
        61172
      ],
      "IConvexRewards": [
        61199
      ],
      "IERC1155Receiver": [
        30210
      ],
      "IERC1155_Locker": [
        41614
      ],
      "IERC165": [
        35484
      ],
      "IERC20": [
        30975
      ],
      "IERC20Permit": [
        31208
      ],
      "IERC721Receiver": [
        32568
      ],
      "IERC721_Locker": [
        41589
      ],
      "IUniswapV2Pool_ZivoeSwapper": [
        59674
      ],
      "IUniswapV3Pool_ZivoeSwapper": [
        59661
      ],
      "IZivoeGlobals": [
        60886
      ],
      "IZivoeGlobals_P_4": [
        59237
      ],
      "IZivoeYDL": [
        61114
      ],
      "IZivoeYDL_P_3": [
        59243
      ],
      "OCY_CVX_Modular": [
        59644
      ],
      "SafeERC20": [
        31489
      ],
      "ZivoeLocker": [
        42223
      ],
      "ZivoeOwnableLocked": [
        48846
      ],
      "ZivoeSwapper": [
        60471
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:8842:85",
    "nodes": [
      {
        "id": 59205,
        "nodeType": "PragmaDirective",
        "src": "46:24:85",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 59206,
        "nodeType": "ImportDirective",
        "src": "74:34:85",
        "nodes": [],
        "absolutePath": "lib/zivoe-core-foundry/src/ZivoeLocker.sol",
        "file": "../../../ZivoeLocker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59645,
        "sourceUnit": 42224,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59207,
        "nodeType": "ImportDirective",
        "src": "110:40:85",
        "nodes": [],
        "absolutePath": "lib/zivoe-core-foundry/src/lockers/Utility/ZivoeSwapper.sol",
        "file": "../../Utility/ZivoeSwapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59645,
        "sourceUnit": 60472,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59215,
        "nodeType": "ImportDirective",
        "src": "154:209:85",
        "nodes": [],
        "absolutePath": "lib/zivoe-core-foundry/src/misc/InterfacesAggregated.sol",
        "file": "../../../misc/InterfacesAggregated.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59645,
        "sourceUnit": 61752,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59208,
              "name": "ICRVPlainPoolFBP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61467,
              "src": "168:16:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59209,
              "name": "IZivoeGlobals",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60886,
              "src": "192:13:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59210,
              "name": "ICRVMetaPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61333,
              "src": "213:12:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59211,
              "name": "ICVX_Booster",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61172,
              "src": "233:12:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59212,
              "name": "IConvexRewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61199,
              "src": "253:14:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59213,
              "name": "IZivoeYDL",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61114,
              "src": "275:9:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59214,
              "name": "AggregatorV3Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61218,
              "src": "292:21:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59237,
        "nodeType": "ContractDefinition",
        "src": "367:224:85",
        "nodes": [
          {
            "id": 59220,
            "nodeType": "FunctionDefinition",
            "src": "402:47:85",
            "nodes": [],
            "functionSelector": "72d6724a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "YDL",
            "nameLocation": "411:3:85",
            "parameters": {
              "id": 59216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:2:85"
            },
            "returnParameters": {
              "id": 59219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59220,
                  "src": "440:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:9:85"
            },
            "scope": 59237,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59227,
            "nodeType": "FunctionDefinition",
            "src": "455:56:85",
            "nodes": [],
            "functionSelector": "6ba42aaa",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isKeeper",
            "nameLocation": "464:8:85",
            "parameters": {
              "id": 59223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59222,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59227,
                  "src": "473:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:9:85"
            },
            "returnParameters": {
              "id": 59226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59227,
                  "src": "505:4:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:6:85"
            },
            "scope": 59237,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59236,
            "nodeType": "FunctionDefinition",
            "src": "517:71:85",
            "nodes": [],
            "functionSelector": "dc3c1da5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "standardize",
            "nameLocation": "526:11:85",
            "parameters": {
              "id": 59232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59236,
                  "src": "538:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59231,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59236,
                  "src": "547:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:18:85"
            },
            "returnParameters": {
              "id": 59235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59236,
                  "src": "579:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "578:9:85"
            },
            "scope": 59237,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IZivoeGlobals_P_4",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          59237
        ],
        "name": "IZivoeGlobals_P_4",
        "nameLocation": "377:17:85",
        "scope": 59645,
        "usedErrors": []
      },
      {
        "id": 59243,
        "nodeType": "ContractDefinition",
        "src": "595:94:85",
        "nodes": [
          {
            "id": 59242,
            "nodeType": "FunctionDefinition",
            "src": "626:60:85",
            "nodes": [],
            "functionSelector": "5df8d168",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "distributedAsset",
            "nameLocation": "635:16:85",
            "parameters": {
              "id": 59238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:2:85"
            },
            "returnParameters": {
              "id": 59241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59240,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59242,
                  "src": "677:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "676:9:85"
            },
            "scope": 59243,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IZivoeYDL_P_3",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          59243
        ],
        "name": "IZivoeYDL_P_3",
        "nameLocation": "605:13:85",
        "scope": 59645,
        "usedErrors": []
      },
      {
        "id": 59644,
        "nodeType": "ContractDefinition",
        "src": "967:7921:85",
        "nodes": [
          {
            "id": 59252,
            "nodeType": "UsingForDirective",
            "src": "1034:27:85",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 59249,
              "name": "SafeERC20",
              "nameLocations": [
                "1040:9:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31489,
              "src": "1040:9:85"
            },
            "typeName": {
              "id": 59251,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59250,
                "name": "IERC20",
                "nameLocations": [
                  "1054:6:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30975,
                "src": "1054:6:85"
              },
              "referencedDeclaration": 30975,
              "src": "1054:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30975",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 59254,
            "nodeType": "VariableDeclaration",
            "src": "1158:28:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ce8d432",
            "mutability": "immutable",
            "name": "GBL",
            "nameLocation": "1183:3:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59253,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1158:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59257,
            "nodeType": "VariableDeclaration",
            "src": "1229:36:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59255,
              "nodeType": "StructuredDocumentation",
              "src": "1188:35:85",
              "text": "@dev The ZivoeGlobals contract."
            },
            "functionSelector": "f988dc3f",
            "mutability": "mutable",
            "name": "nextYieldDistribution",
            "nameLocation": "1244:21:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59256,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1229:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59260,
            "nodeType": "VariableDeclaration",
            "src": "1333:29:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59258,
              "nodeType": "StructuredDocumentation",
              "src": "1271:56:85",
              "text": "@dev Determines next available forwardYield() call. "
            },
            "functionSelector": "aeb3264b",
            "mutability": "mutable",
            "name": "investTimeLock",
            "nameLocation": "1348:14:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59259,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1333:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59263,
            "nodeType": "VariableDeclaration",
            "src": "1452:27:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59261,
              "nodeType": "StructuredDocumentation",
              "src": "1364:82:85",
              "text": "@dev defines a period for keepers to invest before public accessible function."
            },
            "functionSelector": "dbbc65d9",
            "mutability": "mutable",
            "name": "metaOrPlainPool",
            "nameLocation": "1464:15:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 59262,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1452:4:85",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59266,
            "nodeType": "VariableDeclaration",
            "src": "1539:24:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59264,
              "nodeType": "StructuredDocumentation",
              "src": "1482:51:85",
              "text": "@dev If true = metapool, if false = plain pool."
            },
            "functionSelector": "e21c81d3",
            "mutability": "mutable",
            "name": "extraRewards",
            "nameLocation": "1551:12:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 59265,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1539:4:85",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59269,
            "nodeType": "VariableDeclaration",
            "src": "1673:23:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59267,
              "nodeType": "StructuredDocumentation",
              "src": "1569:98:85",
              "text": "@dev If true, extra rewards are distributed on top of CRV and CVX. If false, no extra rewards."
            },
            "functionSelector": "ab2637af",
            "mutability": "mutable",
            "name": "baseline",
            "nameLocation": "1688:8:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59268,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1673:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59272,
            "nodeType": "VariableDeclaration",
            "src": "1770:29:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59270,
              "nodeType": "StructuredDocumentation",
              "src": "1703:61:85",
              "text": "@dev USD convertible, used for forwardYield() accounting."
            },
            "functionSelector": "b3da6b08",
            "mutability": "mutable",
            "name": "yieldOwedToYDL",
            "nameLocation": "1785:14:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59271,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1770:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59275,
            "nodeType": "VariableDeclaration",
            "src": "1938:27:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59273,
              "nodeType": "StructuredDocumentation",
              "src": "1801:131:85",
              "text": "@dev Part of LP token increase over baseline that is owed to the YDL (needed for accounting when pulling or investing capital)."
            },
            "functionSelector": "f5a04785",
            "mutability": "mutable",
            "name": "toForwardCRV",
            "nameLocation": "1953:12:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59274,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1938:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59278,
            "nodeType": "VariableDeclaration",
            "src": "2048:27:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59276,
              "nodeType": "StructuredDocumentation",
              "src": "1967:75:85",
              "text": "@dev CRV tokens harvested that need to be transfered by ZVL to the YDL."
            },
            "functionSelector": "f85fcb1a",
            "mutability": "mutable",
            "name": "toForwardCVX",
            "nameLocation": "2063:12:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2048:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59282,
            "nodeType": "VariableDeclaration",
            "src": "2158:38:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59279,
              "nodeType": "StructuredDocumentation",
              "src": "2077:75:85",
              "text": "@dev CVX tokens harvested that need to be transfered by ZVL to the YDL."
            },
            "functionSelector": "be8d8061",
            "mutability": "mutable",
            "name": "toForwardExtraRewards",
            "nameLocation": "2175:21:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 59280,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2158:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 59281,
              "nodeType": "ArrayTypeName",
              "src": "2158:9:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59286,
            "nodeType": "VariableDeclaration",
            "src": "2282:40:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59283,
              "nodeType": "StructuredDocumentation",
              "src": "2198:78:85",
              "text": "@dev Extra rewards harvested that need to be transfered by ZVL to the YDL."
            },
            "functionSelector": "da87d2cf",
            "mutability": "mutable",
            "name": "toForwardTokensBaseline",
            "nameLocation": "2299:23:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 59284,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2282:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 59285,
              "nodeType": "ArrayTypeName",
              "src": "2282:9:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59289,
            "nodeType": "VariableDeclaration",
            "src": "2440:34:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59287,
              "nodeType": "StructuredDocumentation",
              "src": "2408:26:85",
              "text": "@dev Convex addresses."
            },
            "functionSelector": "4d65dd1c",
            "mutability": "mutable",
            "name": "CVX_Deposit_Address",
            "nameLocation": "2455:19:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59288,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2440:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59291,
            "nodeType": "VariableDeclaration",
            "src": "2481:33:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "eada4cd7",
            "mutability": "mutable",
            "name": "CVX_Reward_Address",
            "nameLocation": "2496:18:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59290,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2481:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59294,
            "nodeType": "VariableDeclaration",
            "src": "2561:27:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59292,
              "nodeType": "StructuredDocumentation",
              "src": "2523:32:85",
              "text": "@dev Convex staking pool ID."
            },
            "functionSelector": "49a5e73b",
            "mutability": "mutable",
            "name": "convexPoolID",
            "nameLocation": "2576:12:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59293,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2561:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59298,
            "nodeType": "VariableDeclaration",
            "src": "2718:72:85",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 59295,
              "nodeType": "StructuredDocumentation",
              "src": "2597:115:85",
              "text": "@dev Reward addresses.\nTODO: could optimize with including CVX and CRV in \"rewardsAddresses\", to check."
            },
            "functionSelector": "759cb53b",
            "mutability": "constant",
            "name": "CVX",
            "nameLocation": "2742:3:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59296,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2718:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
              "id": 59297,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2748:42:85",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
            },
            "visibility": "public"
          },
          {
            "id": 59301,
            "nodeType": "VariableDeclaration",
            "src": "2797:72:85",
            "nodes": [],
            "constant": true,
            "functionSelector": "945c9142",
            "mutability": "constant",
            "name": "CRV",
            "nameLocation": "2821:3:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59299,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2797:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
              "id": 59300,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2827:42:85",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
            },
            "visibility": "public"
          },
          {
            "id": 59304,
            "nodeType": "VariableDeclaration",
            "src": "2876:33:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0c9455a",
            "mutability": "mutable",
            "name": "rewardsAddresses",
            "nameLocation": "2893:16:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 59302,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2876:7:85",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 59303,
              "nodeType": "ArrayTypeName",
              "src": "2876:9:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59307,
            "nodeType": "VariableDeclaration",
            "src": "2949:19:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59305,
              "nodeType": "StructuredDocumentation",
              "src": "2918:25:85",
              "text": "@dev Curve addresses:"
            },
            "functionSelector": "16f0115b",
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "2964:4:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59306,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2949:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59309,
            "nodeType": "VariableDeclaration",
            "src": "2975:28:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "b2c500f0",
            "mutability": "mutable",
            "name": "POOL_LP_TOKEN",
            "nameLocation": "2990:13:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59308,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2975:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59312,
            "nodeType": "VariableDeclaration",
            "src": "3185:25:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59310,
              "nodeType": "StructuredDocumentation",
              "src": "3150:29:85",
              "text": "@dev Metapool parameters:"
            },
            "functionSelector": "210663e4",
            "mutability": "mutable",
            "name": "BASE_TOKEN",
            "nameLocation": "3200:10:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59311,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3185:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59314,
            "nodeType": "VariableDeclaration",
            "src": "3217:37:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "5edb2ba4",
            "mutability": "mutable",
            "name": "MP_UNDERLYING_LP_TOKEN",
            "nameLocation": "3232:22:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59313,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3217:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59316,
            "nodeType": "VariableDeclaration",
            "src": "3261:36:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "5e860430",
            "mutability": "mutable",
            "name": "MP_UNDERLYING_LP_POOL",
            "nameLocation": "3276:21:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59315,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3261:7:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59318,
            "nodeType": "VariableDeclaration",
            "src": "3381:43:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "da456cbd",
            "mutability": "mutable",
            "name": "numberOfTokensUnderlyingLPPool",
            "nameLocation": "3394:30:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 59317,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "3381:5:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59320,
            "nodeType": "VariableDeclaration",
            "src": "3431:29:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "1af1ca97",
            "mutability": "mutable",
            "name": "indexBASE_TOKEN",
            "nameLocation": "3445:15:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int128",
              "typeString": "int128"
            },
            "typeName": {
              "id": 59319,
              "name": "int128",
              "nodeType": "ElementaryTypeName",
              "src": "3431:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_int128",
                "typeString": "int128"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59324,
            "nodeType": "VariableDeclaration",
            "src": "3506:26:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59321,
              "nodeType": "StructuredDocumentation",
              "src": "3469:31:85",
              "text": "@dev Plain Pool parameters:"
            },
            "functionSelector": "d0991c84",
            "mutability": "mutable",
            "name": "PP_TOKENS",
            "nameLocation": "3523:9:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 59322,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3506:7:85",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 59323,
              "nodeType": "ArrayTypeName",
              "src": "3506:9:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59328,
            "nodeType": "VariableDeclaration",
            "src": "3579:36:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59325,
              "nodeType": "StructuredDocumentation",
              "src": "3542:31:85",
              "text": "@dev chainlink price feeds:"
            },
            "functionSelector": "2dd3d9ef",
            "mutability": "mutable",
            "name": "chainlinkPriceFeeds",
            "nameLocation": "3596:19:85",
            "scope": 59644,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 59326,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3579:7:85",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 59327,
              "nodeType": "ArrayTypeName",
              "src": "3579:9:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59616,
            "nodeType": "FunctionDefinition",
            "src": "5231:3285:85",
            "nodes": [],
            "body": {
              "id": 59615,
              "nodeType": "Block",
              "src": "5695:2821:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 59361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 59359,
                          "name": "_numberOfTokensPP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59350,
                          "src": "5716:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 59360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5736:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5716:21:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "655f4f43595f4356585f4d6f64756c61723a3a636f6e7374727563746f722829206d6178203420746f6b656e7320696e20706c61696e20706f6f6c",
                        "id": 59362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5739:61:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbcc2c26031d9a3a8ecdafca5d1fcd7c65bcd8f09d139e8c900547ded0c99be4",
                          "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() max 4 tokens in plain pool\""
                        },
                        "value": "e_OCY_CVX_Modular::constructor() max 4 tokens in plain pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbcc2c26031d9a3a8ecdafca5d1fcd7c65bcd8f09d139e8c900547ded0c99be4",
                          "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() max 4 tokens in plain pool\""
                        }
                      ],
                      "id": 59358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5708:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5708:93:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59364,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:93:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59366,
                            "name": "_rewardsAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59342,
                            "src": "5820:17:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 59367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5838:6:85",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5820:24:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 59368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5847:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5820:28:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "655f4f43595f4356585f4d6f64756c61723a3a636f6e7374727563746f722829206d617820342072657761726420746f6b656e73",
                        "id": 59370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5850:54:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f169ca50d5d1c18b225528582661dce5d2664dea9ee7063b382885323d2f598",
                          "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() max 4 reward tokens\""
                        },
                        "value": "e_OCY_CVX_Modular::constructor() max 4 reward tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f169ca50d5d1c18b225528582661dce5d2664dea9ee7063b382885323d2f598",
                          "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() max 4 reward tokens\""
                        }
                      ],
                      "id": 59365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5812:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5812:93:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59372,
                  "nodeType": "ExpressionStatement",
                  "src": "5812:93:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 59376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 59374,
                          "name": "_numberOfTokensUnderlyingLPPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59348,
                          "src": "5924:31:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 59375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5958:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5924:35:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "655f4f43595f4356585f4d6f64756c61723a3a636f6e7374727563746f722829206d6178203420746f6b656e7320696e20756e6465726c79696e67204c5020706f6f6c",
                        "id": 59377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5961:69:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f542584fe331acdc68d2058572ffd55ca37c34f9e2c28c16c2b45fabe6d9fe3",
                          "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() max 4 tokens in underlying LP pool\""
                        },
                        "value": "e_OCY_CVX_Modular::constructor() max 4 tokens in underlying LP pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f542584fe331acdc68d2058572ffd55ca37c34f9e2c28c16c2b45fabe6d9fe3",
                          "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() max 4 tokens in underlying LP pool\""
                        }
                      ],
                      "id": 59373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5916:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5916:115:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59379,
                  "nodeType": "ExpressionStatement",
                  "src": "5916:115:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 59381,
                          "name": "_ZivoeAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59332,
                          "src": "6062:15:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 59383,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 59382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6078:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6062:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59380,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48796,
                      "src": "6044:17:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 59384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6044:37:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59385,
                  "nodeType": "ExpressionStatement",
                  "src": "6044:37:85"
                },
                {
                  "expression": {
                    "id": 59390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59386,
                      "name": "GBL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59254,
                      "src": "6092:3:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 59387,
                        "name": "_ZivoeAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59332,
                        "src": "6098:15:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 59389,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 59388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6114:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6098:18:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6092:24:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59391,
                  "nodeType": "ExpressionStatement",
                  "src": "6092:24:85"
                },
                {
                  "expression": {
                    "id": 59394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59392,
                      "name": "CVX_Deposit_Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59289,
                      "src": "6127:19:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59393,
                      "name": "_CVX_Deposit_Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59339,
                      "src": "6149:20:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6127:42:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59395,
                  "nodeType": "ExpressionStatement",
                  "src": "6127:42:85"
                },
                {
                  "expression": {
                    "id": 59404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59396,
                      "name": "CVX_Reward_Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59291,
                      "src": "6180:18:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 59401,
                            "name": "_convexPoolID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59352,
                            "src": "6245:13:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 59398,
                                "name": "_CVX_Deposit_Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59339,
                                "src": "6214:20:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59397,
                              "name": "ICVX_Booster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61172,
                              "src": "6201:12:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICVX_Booster_$61172_$",
                                "typeString": "type(contract ICVX_Booster)"
                              }
                            },
                            "id": 59399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6201:34:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICVX_Booster_$61172",
                              "typeString": "contract ICVX_Booster"
                            }
                          },
                          "id": 59400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6236:8:85",
                          "memberName": "poolInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61171,
                          "src": "6201:43:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_PoolInfo_$61127_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct PoolInfo memory)"
                          }
                        },
                        "id": 59402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6201:58:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$61127_memory_ptr",
                          "typeString": "struct PoolInfo memory"
                        }
                      },
                      "id": 59403,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6260:10:85",
                      "memberName": "crvRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61122,
                      "src": "6201:69:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6180:90:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59405,
                  "nodeType": "ExpressionStatement",
                  "src": "6180:90:85"
                },
                {
                  "expression": {
                    "id": 59410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59406,
                      "name": "metaOrPlainPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59263,
                      "src": "6281:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 59407,
                        "name": "_boolMetaOrPlainAndRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59335,
                        "src": "6299:26:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[] memory"
                        }
                      },
                      "id": 59409,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 59408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6326:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6299:29:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6281:47:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59411,
                  "nodeType": "ExpressionStatement",
                  "src": "6281:47:85"
                },
                {
                  "expression": {
                    "id": 59414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59412,
                      "name": "convexPoolID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59294,
                      "src": "6339:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59413,
                      "name": "_convexPoolID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59352,
                      "src": "6354:13:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6339:28:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59415,
                  "nodeType": "ExpressionStatement",
                  "src": "6339:28:85"
                },
                {
                  "expression": {
                    "id": 59420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59416,
                      "name": "extraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59266,
                      "src": "6378:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 59417,
                        "name": "_boolMetaOrPlainAndRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59335,
                        "src": "6393:26:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[] memory"
                        }
                      },
                      "id": 59419,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 59418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6420:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6393:29:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6378:44:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59421,
                  "nodeType": "ExpressionStatement",
                  "src": "6378:44:85"
                },
                {
                  "expression": {
                    "id": 59424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59422,
                      "name": "numberOfTokensUnderlyingLPPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59318,
                      "src": "6433:30:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59423,
                      "name": "_numberOfTokensUnderlyingLPPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59348,
                      "src": "6466:31:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6433:64:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 59425,
                  "nodeType": "ExpressionStatement",
                  "src": "6433:64:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 59428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59426,
                      "name": "extraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59266,
                      "src": "6574:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 59427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6590:4:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6574:20:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59451,
                  "nodeType": "IfStatement",
                  "src": "6570:183:85",
                  "trueBody": {
                    "id": 59450,
                    "nodeType": "Block",
                    "src": "6596:157:85",
                    "statements": [
                      {
                        "body": {
                          "id": 59448,
                          "nodeType": "Block",
                          "src": "6664:78:85",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 59443,
                                      "name": "_rewardsAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59342,
                                      "src": "6705:17:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 59445,
                                    "indexExpression": {
                                      "id": 59444,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59430,
                                      "src": "6723:1:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6705:20:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 59440,
                                    "name": "rewardsAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59304,
                                    "src": "6683:16:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 59442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6700:4:85",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "6683:21:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 59446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6683:43:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 59447,
                              "nodeType": "ExpressionStatement",
                              "src": "6683:43:85"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 59433,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59430,
                            "src": "6629:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 59434,
                              "name": "_rewardsAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59342,
                              "src": "6633:17:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 59435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6651:6:85",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6633:24:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6629:28:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 59449,
                        "initializationExpression": {
                          "assignments": [
                            59430
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 59430,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6622:1:85",
                              "nodeType": "VariableDeclaration",
                              "scope": 59449,
                              "src": "6616:7:85",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 59429,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "6616:5:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 59432,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 59431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6626:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6616:11:85"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 59438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6659:3:85",
                            "subExpression": {
                              "id": 59437,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59430,
                              "src": "6659:1:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 59439,
                          "nodeType": "ExpressionStatement",
                          "src": "6659:3:85"
                        },
                        "nodeType": "ForStatement",
                        "src": "6611:131:85"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 59454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59452,
                      "name": "metaOrPlainPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59263,
                      "src": "6773:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 59453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6792:4:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6773:23:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59556,
                  "nodeType": "IfStatement",
                  "src": "6769:985:85",
                  "trueBody": {
                    "id": 59555,
                    "nodeType": "Block",
                    "src": "6798:956:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 59462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 59456,
                                  "name": "_chainlinkPriceFeeds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59355,
                                  "src": "6821:20:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 59457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6842:6:85",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6821:27:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 59460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "31",
                                      "id": 59458,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6853:1:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 59459,
                                      "name": "numberOfTokensUnderlyingLPPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59318,
                                      "src": "6857:30:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6853:34:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "id": 59461,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6852:36:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "6821:67:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "655f4f43595f4356585f4d6f64756c61723a3a636f6e7374727563746f722829206e6f20636f727265637420616d6f756e74206f6620707269636520666565647320666f72206d657461706f6f6c",
                              "id": 59463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6891:80:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a8ace6b7feda989bd44535c93a4d498fc708d1f70ae9f320cf58d496d765c1f6",
                                "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() no correct amount of price feeds for metapool\""
                              },
                              "value": "e_OCY_CVX_Modular::constructor() no correct amount of price feeds for metapool"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a8ace6b7feda989bd44535c93a4d498fc708d1f70ae9f320cf58d496d765c1f6",
                                "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() no correct amount of price feeds for metapool\""
                              }
                            ],
                            "id": 59455,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6813:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 59464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6813:159:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59465,
                        "nodeType": "ExpressionStatement",
                        "src": "6813:159:85"
                      },
                      {
                        "expression": {
                          "id": 59468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59466,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59307,
                            "src": "6987:4:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 59467,
                            "name": "_curvePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59337,
                            "src": "6994:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6987:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59469,
                        "nodeType": "ExpressionStatement",
                        "src": "6987:17:85"
                      },
                      {
                        "expression": {
                          "id": 59478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59470,
                            "name": "POOL_LP_TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59309,
                            "src": "7019:13:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59475,
                                  "name": "_convexPoolID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59352,
                                  "src": "7079:13:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 59472,
                                      "name": "_CVX_Deposit_Address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59339,
                                      "src": "7048:20:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 59471,
                                    "name": "ICVX_Booster",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61172,
                                    "src": "7035:12:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICVX_Booster_$61172_$",
                                      "typeString": "type(contract ICVX_Booster)"
                                    }
                                  },
                                  "id": 59473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7035:34:85",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICVX_Booster_$61172",
                                    "typeString": "contract ICVX_Booster"
                                  }
                                },
                                "id": 59474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7070:8:85",
                                "memberName": "poolInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 61171,
                                "src": "7035:43:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_PoolInfo_$61127_memory_ptr_$",
                                  "typeString": "function (uint256) view external returns (struct PoolInfo memory)"
                                }
                              },
                              "id": 59476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7035:58:85",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$61127_memory_ptr",
                                "typeString": "struct PoolInfo memory"
                              }
                            },
                            "id": 59477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7094:7:85",
                            "memberName": "lptoken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61116,
                            "src": "7035:66:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7019:82:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59479,
                        "nodeType": "ExpressionStatement",
                        "src": "7019:82:85"
                      },
                      {
                        "expression": {
                          "id": 59482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59480,
                            "name": "BASE_TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59312,
                            "src": "7116:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 59481,
                            "name": "_BASE_TOKEN_MP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59344,
                            "src": "7129:14:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7116:27:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59483,
                        "nodeType": "ExpressionStatement",
                        "src": "7116:27:85"
                      },
                      {
                        "expression": {
                          "id": 59486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59484,
                            "name": "MP_UNDERLYING_LP_POOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59316,
                            "src": "7158:21:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 59485,
                            "name": "_MP_UNDERLYING_LP_POOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59346,
                            "src": "7182:22:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7158:46:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59487,
                        "nodeType": "ExpressionStatement",
                        "src": "7158:46:85"
                      },
                      {
                        "body": {
                          "id": 59507,
                          "nodeType": "Block",
                          "src": "7285:84:85",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 59502,
                                      "name": "_chainlinkPriceFeeds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59355,
                                      "src": "7329:20:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 59504,
                                    "indexExpression": {
                                      "id": 59503,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59489,
                                      "src": "7350:1:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7329:23:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 59499,
                                    "name": "chainlinkPriceFeeds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59328,
                                    "src": "7304:19:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 59501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7324:4:85",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "7304:24:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 59505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7304:49:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 59506,
                              "nodeType": "ExpressionStatement",
                              "src": "7304:49:85"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 59492,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59489,
                            "src": "7247:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 59493,
                              "name": "_chainlinkPriceFeeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59355,
                              "src": "7251:20:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 59494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7272:6:85",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7251:27:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7247:31:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 59508,
                        "initializationExpression": {
                          "assignments": [
                            59489
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 59489,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7240:1:85",
                              "nodeType": "VariableDeclaration",
                              "scope": 59508,
                              "src": "7234:7:85",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 59488,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "7234:5:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 59491,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 59490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7244:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7234:11:85"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 59497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7280:3:85",
                            "subExpression": {
                              "id": 59496,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59489,
                              "src": "7280:1:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 59498,
                          "nodeType": "ExpressionStatement",
                          "src": "7280:3:85"
                        },
                        "nodeType": "ForStatement",
                        "src": "7229:140:85"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 59513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7412:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 59510,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59307,
                                    "src": "7400:4:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 59509,
                                  "name": "ICRVMetaPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61333,
                                  "src": "7387:12:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICRVMetaPool_$61333_$",
                                    "typeString": "type(contract ICRVMetaPool)"
                                  }
                                },
                                "id": 59511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7387:18:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICRVMetaPool_$61333",
                                  "typeString": "contract ICRVMetaPool"
                                }
                              },
                              "id": 59512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7406:5:85",
                              "memberName": "coins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61263,
                              "src": "7387:24:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 59514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7387:27:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 59515,
                            "name": "_BASE_TOKEN_MP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59344,
                            "src": "7418:14:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7387:45:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 59538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 59535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7594:1:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 59532,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59307,
                                      "src": "7582:4:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 59531,
                                    "name": "ICRVMetaPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61333,
                                    "src": "7569:12:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICRVMetaPool_$61333_$",
                                      "typeString": "type(contract ICRVMetaPool)"
                                    }
                                  },
                                  "id": 59533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7569:18:85",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICRVMetaPool_$61333",
                                    "typeString": "contract ICRVMetaPool"
                                  }
                                },
                                "id": 59534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7588:5:85",
                                "memberName": "coins",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 61263,
                                "src": "7569:24:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 59536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7569:27:85",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 59537,
                              "name": "_BASE_TOKEN_MP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59344,
                              "src": "7600:14:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7569:45:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 59553,
                          "nodeType": "IfStatement",
                          "src": "7565:176:85",
                          "trueBody": {
                            "id": 59552,
                            "nodeType": "Block",
                            "src": "7616:125:85",
                            "statements": [
                              {
                                "expression": {
                                  "id": 59546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 59539,
                                    "name": "MP_UNDERLYING_LP_TOKEN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59314,
                                    "src": "7635:22:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 59544,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7685:1:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 59541,
                                            "name": "pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 59307,
                                            "src": "7673:4:85",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 59540,
                                          "name": "ICRVMetaPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61333,
                                          "src": "7660:12:85",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ICRVMetaPool_$61333_$",
                                            "typeString": "type(contract ICRVMetaPool)"
                                          }
                                        },
                                        "id": 59542,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7660:18:85",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ICRVMetaPool_$61333",
                                          "typeString": "contract ICRVMetaPool"
                                        }
                                      },
                                      "id": 59543,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7679:5:85",
                                      "memberName": "coins",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 61263,
                                      "src": "7660:24:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 59545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7660:27:85",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "7635:52:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 59547,
                                "nodeType": "ExpressionStatement",
                                "src": "7635:52:85"
                              },
                              {
                                "expression": {
                                  "id": 59550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 59548,
                                    "name": "indexBASE_TOKEN",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59320,
                                    "src": "7706:15:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int128",
                                      "typeString": "int128"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 59549,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7724:1:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "7706:19:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int128",
                                    "typeString": "int128"
                                  }
                                },
                                "id": 59551,
                                "nodeType": "ExpressionStatement",
                                "src": "7706:19:85"
                              }
                            ]
                          }
                        },
                        "id": 59554,
                        "nodeType": "IfStatement",
                        "src": "7383:358:85",
                        "trueBody": {
                          "id": 59530,
                          "nodeType": "Block",
                          "src": "7434:125:85",
                          "statements": [
                            {
                              "expression": {
                                "id": 59524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 59517,
                                  "name": "MP_UNDERLYING_LP_TOKEN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59314,
                                  "src": "7453:22:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 59522,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7503:1:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 59519,
                                          "name": "pool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 59307,
                                          "src": "7491:4:85",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 59518,
                                        "name": "ICRVMetaPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61333,
                                        "src": "7478:12:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ICRVMetaPool_$61333_$",
                                          "typeString": "type(contract ICRVMetaPool)"
                                        }
                                      },
                                      "id": 59520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7478:18:85",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ICRVMetaPool_$61333",
                                        "typeString": "contract ICRVMetaPool"
                                      }
                                    },
                                    "id": 59521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7497:5:85",
                                    "memberName": "coins",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 61263,
                                    "src": "7478:24:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                      "typeString": "function (uint256) view external returns (address)"
                                    }
                                  },
                                  "id": 59523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7478:27:85",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7453:52:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 59525,
                              "nodeType": "ExpressionStatement",
                              "src": "7453:52:85"
                            },
                            {
                              "expression": {
                                "id": 59528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 59526,
                                  "name": "indexBASE_TOKEN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59320,
                                  "src": "7524:15:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int128",
                                    "typeString": "int128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 59527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7542:1:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7524:19:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int128",
                                  "typeString": "int128"
                                }
                              },
                              "id": 59529,
                              "nodeType": "ExpressionStatement",
                              "src": "7524:19:85"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 59559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59557,
                      "name": "metaOrPlainPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59263,
                      "src": "7770:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 59558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7789:5:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7770:24:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59614,
                  "nodeType": "IfStatement",
                  "src": "7766:743:85",
                  "trueBody": {
                    "id": 59613,
                    "nodeType": "Block",
                    "src": "7796:713:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 59564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 59561,
                                  "name": "_chainlinkPriceFeeds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59355,
                                  "src": "7819:20:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 59562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7840:6:85",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7819:27:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 59563,
                                "name": "_numberOfTokensPP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59350,
                                "src": "7850:17:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "7819:48:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "655f4f43595f4356585f4d6f64756c61723a3a636f6e7374727563746f72282920706c61696e20706f6f6c3a206e756d626572206f662070726963652066656564732073686f756c6420636f72726573706f6e6420746f206e756d626572206f6620746f6b656e73",
                              "id": 59565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7869:106:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5ec6ccc132474af28d4653f02e7a9ff47480a826fc9bfa520af614bf106f96cc",
                                "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() plain pool: number of price feeds should correspond to number of tokens\""
                              },
                              "value": "e_OCY_CVX_Modular::constructor() plain pool: number of price feeds should correspond to number of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5ec6ccc132474af28d4653f02e7a9ff47480a826fc9bfa520af614bf106f96cc",
                                "typeString": "literal_string \"e_OCY_CVX_Modular::constructor() plain pool: number of price feeds should correspond to number of tokens\""
                              }
                            ],
                            "id": 59560,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7811:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 59566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7811:165:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59567,
                        "nodeType": "ExpressionStatement",
                        "src": "7811:165:85"
                      },
                      {
                        "expression": {
                          "id": 59570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59568,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59307,
                            "src": "7991:4:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 59569,
                            "name": "_curvePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59337,
                            "src": "7998:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7991:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59571,
                        "nodeType": "ExpressionStatement",
                        "src": "7991:17:85"
                      },
                      {
                        "expression": {
                          "id": 59580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59572,
                            "name": "POOL_LP_TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59309,
                            "src": "8023:13:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59577,
                                  "name": "_convexPoolID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59352,
                                  "src": "8083:13:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 59574,
                                      "name": "_CVX_Deposit_Address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59339,
                                      "src": "8052:20:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 59573,
                                    "name": "ICVX_Booster",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61172,
                                    "src": "8039:12:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ICVX_Booster_$61172_$",
                                      "typeString": "type(contract ICVX_Booster)"
                                    }
                                  },
                                  "id": 59575,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8039:34:85",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICVX_Booster_$61172",
                                    "typeString": "contract ICVX_Booster"
                                  }
                                },
                                "id": 59576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8074:8:85",
                                "memberName": "poolInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 61171,
                                "src": "8039:43:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_PoolInfo_$61127_memory_ptr_$",
                                  "typeString": "function (uint256) view external returns (struct PoolInfo memory)"
                                }
                              },
                              "id": 59578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8039:58:85",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$61127_memory_ptr",
                                "typeString": "struct PoolInfo memory"
                              }
                            },
                            "id": 59579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8098:7:85",
                            "memberName": "lptoken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61116,
                            "src": "8039:66:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8023:82:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59581,
                        "nodeType": "ExpressionStatement",
                        "src": "8023:82:85"
                      },
                      {
                        "body": {
                          "id": 59611,
                          "nodeType": "Block",
                          "src": "8348:150:85",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 59599,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59583,
                                        "src": "8411:1:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 59596,
                                            "name": "pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 59307,
                                            "src": "8399:4:85",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 59595,
                                          "name": "ICRVPlainPoolFBP",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61467,
                                          "src": "8382:16:85",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ICRVPlainPoolFBP_$61467_$",
                                            "typeString": "type(contract ICRVPlainPoolFBP)"
                                          }
                                        },
                                        "id": 59597,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8382:22:85",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ICRVPlainPoolFBP_$61467",
                                          "typeString": "contract ICRVPlainPoolFBP"
                                        }
                                      },
                                      "id": 59598,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8405:5:85",
                                      "memberName": "coins",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 61382,
                                      "src": "8382:28:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 59600,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8382:31:85",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 59592,
                                    "name": "PP_TOKENS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59324,
                                    "src": "8367:9:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 59594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8377:4:85",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "8367:14:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 59601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8367:47:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 59602,
                              "nodeType": "ExpressionStatement",
                              "src": "8367:47:85"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 59606,
                                      "name": "_chainlinkPriceFeeds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59355,
                                      "src": "8458:20:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 59608,
                                    "indexExpression": {
                                      "id": 59607,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59583,
                                      "src": "8479:1:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8458:23:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 59603,
                                    "name": "chainlinkPriceFeeds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59328,
                                    "src": "8433:19:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 59605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8453:4:85",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "8433:24:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 59609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8433:49:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 59610,
                              "nodeType": "ExpressionStatement",
                              "src": "8433:49:85"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 59588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 59586,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59583,
                            "src": "8320:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 59587,
                            "name": "_numberOfTokensPP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59350,
                            "src": "8324:17:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8320:21:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "TODO: Check if possible to require that price feeds submitted in right order.",
                        "id": 59612,
                        "initializationExpression": {
                          "assignments": [
                            59583
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 59583,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8313:1:85",
                              "nodeType": "VariableDeclaration",
                              "scope": 59612,
                              "src": "8307:7:85",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 59582,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "8307:5:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 59585,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 59584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8317:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8307:11:85"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 59590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8343:3:85",
                            "subExpression": {
                              "id": 59589,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59583,
                              "src": "8343:1:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 59591,
                          "nodeType": "ExpressionStatement",
                          "src": "8343:3:85"
                        },
                        "nodeType": "ForStatement",
                        "src": "8302:196:85"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 59329,
              "nodeType": "StructuredDocumentation",
              "src": "3701:1524:85",
              "text": "@notice Initializes the e_OCY_CVX_Modular.sol contract.\n @param _ZivoeAddresses _ZivoeAddresses[0] = The administrator of this contract (intended to be ZivoeDAO) and _ZivoeAddresses[1] = GBL (the ZivoeGlobals contract).\n @param _boolMetaOrPlainAndRewards _boolMetaOrPlainAndRewards[0] => If true: metapool, if false: plain pool. _boolMetaOrPlainAndRewards[1] => if true: extra rewards distributed on top of CRV or CVX.\n @param _curvePool address of the Curve Pool.\n @param _CVX_Deposit_Address address of the convex Booster contract.\n @param _rewardsAddresses addresses of the extra rewards. If _extraRewards = false set as an array of the zero address.\n @param _BASE_TOKEN_MP if metapool should specify the address of the base token of the pool. If plain pool, set to the zero address.\n @param _MP_UNDERLYING_LP_POOL if metapool specify address of the underlying LP token's pool (3CRV for example).\n @param _numberOfTokensUnderlyingLPPool if metapool: specify the number of tokens in the underlying LP pool (for 3CRV pool set to 3). If plain pool: set to 0.\n @param _numberOfTokensPP If pool is a metapool, set to 0. If plain pool, specify the number of coins in the pool.\n @param _convexPoolID Indicate the ID of the Convex pool where the LP token should be staked.\n @param _chainlinkPriceFeeds array containing the addresses of the chainlink price feeds, should be provided in correct order (refer to coins index in Curve pool)"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59332,
                  "mutability": "mutable",
                  "name": "_ZivoeAddresses",
                  "nameLocation": "5270:15:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5253:32:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59330,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5253:7:85",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 59331,
                    "nodeType": "ArrayTypeName",
                    "src": "5253:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59335,
                  "mutability": "mutable",
                  "name": "_boolMetaOrPlainAndRewards",
                  "nameLocation": "5312:26:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5298:40:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59333,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "5298:4:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 59334,
                    "nodeType": "ArrayTypeName",
                    "src": "5298:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59337,
                  "mutability": "mutable",
                  "name": "_curvePool",
                  "nameLocation": "5358:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5350:18:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59339,
                  "mutability": "mutable",
                  "name": "_CVX_Deposit_Address",
                  "nameLocation": "5388:20:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5380:28:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5380:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59342,
                  "mutability": "mutable",
                  "name": "_rewardsAddresses",
                  "nameLocation": "5437:17:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5420:34:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59340,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5420:7:85",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 59341,
                    "nodeType": "ArrayTypeName",
                    "src": "5420:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59344,
                  "mutability": "mutable",
                  "name": "_BASE_TOKEN_MP",
                  "nameLocation": "5474:14:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5466:22:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59346,
                  "mutability": "mutable",
                  "name": "_MP_UNDERLYING_LP_POOL",
                  "nameLocation": "5508:22:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5500:30:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5500:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59348,
                  "mutability": "mutable",
                  "name": "_numberOfTokensUnderlyingLPPool",
                  "nameLocation": "5547:31:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5541:37:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 59347,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5541:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59350,
                  "mutability": "mutable",
                  "name": "_numberOfTokensPP",
                  "nameLocation": "5595:17:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5589:23:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 59349,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5589:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59352,
                  "mutability": "mutable",
                  "name": "_convexPoolID",
                  "nameLocation": "5632:13:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5624:21:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5624:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59355,
                  "mutability": "mutable",
                  "name": "_chainlinkPriceFeeds",
                  "nameLocation": "5673:20:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59616,
                  "src": "5656:37:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59353,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5656:7:85",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 59354,
                    "nodeType": "ArrayTypeName",
                    "src": "5656:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5242:452:85"
            },
            "returnParameters": {
              "id": 59357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5695:0:85"
            },
            "scope": 59644,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59625,
            "nodeType": "FunctionDefinition",
            "src": "8595:90:85",
            "nodes": [],
            "body": {
              "id": 59624,
              "nodeType": "Block",
              "src": "8655:30:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 59622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8673:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 59621,
                  "id": 59623,
                  "nodeType": "Return",
                  "src": "8666:11:85"
                }
              ]
            },
            "baseFunctions": [
              41666
            ],
            "functionSelector": "a4a3e79d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canPushMulti",
            "nameLocation": "8604:12:85",
            "overrides": {
              "id": 59618,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8631:8:85"
            },
            "parameters": {
              "id": 59617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8616:2:85"
            },
            "returnParameters": {
              "id": 59621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59625,
                  "src": "8649:4:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59619,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8649:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8648:6:85"
            },
            "scope": 59644,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59634,
            "nodeType": "FunctionDefinition",
            "src": "8693:90:85",
            "nodes": [],
            "body": {
              "id": 59633,
              "nodeType": "Block",
              "src": "8753:30:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 59631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8771:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 59630,
                  "id": 59632,
                  "nodeType": "Return",
                  "src": "8764:11:85"
                }
              ]
            },
            "baseFunctions": [
              41675
            ],
            "functionSelector": "3eda81ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canPullMulti",
            "nameLocation": "8702:12:85",
            "overrides": {
              "id": 59627,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8729:8:85"
            },
            "parameters": {
              "id": 59626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8714:2:85"
            },
            "returnParameters": {
              "id": 59630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59634,
                  "src": "8747:4:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8747:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8746:6:85"
            },
            "scope": 59644,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59643,
            "nodeType": "FunctionDefinition",
            "src": "8791:92:85",
            "nodes": [],
            "body": {
              "id": 59642,
              "nodeType": "Block",
              "src": "8853:30:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 59640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8871:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 59639,
                  "id": 59641,
                  "nodeType": "Return",
                  "src": "8864:11:85"
                }
              ]
            },
            "baseFunctions": [
              41657
            ],
            "functionSelector": "64c77735",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canPullPartial",
            "nameLocation": "8800:14:85",
            "overrides": {
              "id": 59636,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8824:8:85"
            },
            "parameters": {
              "id": 59635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8814:2:85"
            },
            "returnParameters": {
              "id": 59639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59643,
                  "src": "8847:4:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59637,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8847:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8846:6:85"
            },
            "scope": 59644,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59245,
              "name": "ZivoeLocker",
              "nameLocations": [
                "995:11:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42223,
              "src": "995:11:85"
            },
            "id": 59246,
            "nodeType": "InheritanceSpecifier",
            "src": "995:11:85"
          },
          {
            "baseName": {
              "id": 59247,
              "name": "ZivoeSwapper",
              "nameLocations": [
                "1008:12:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60471,
              "src": "1008:12:85"
            },
            "id": 59248,
            "nodeType": "InheritanceSpecifier",
            "src": "1008:12:85"
          }
        ],
        "canonicalName": "OCY_CVX_Modular",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 59244,
          "nodeType": "StructuredDocumentation",
          "src": "693:272:85",
          "text": "@dev    This contract aims at deploying lockers that will invest in Convex pools. \n         Plain pools should contain only stablecoins denominated in same currency (all tokens in USD or all tokens in EUR for example, otherwise USD_Convertible won't be correct)."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59644,
          60471,
          42223,
          32747,
          32568,
          30276,
          30310,
          30210,
          35472,
          35484,
          48846,
          34470
        ],
        "name": "OCY_CVX_Modular",
        "nameLocation": "976:15:85",
        "scope": 59645,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 85
}